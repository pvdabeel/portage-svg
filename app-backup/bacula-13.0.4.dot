digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://app-backup/bacula-13.0.4", color=red, width=4, href="../app-backup/bacula-13.0.4.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(negative,bacula-clientonly,portage://app-backup/bacula-13.0.4,[use_conditional_group(negative,bacula-nodir,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,virtual,mta,none,[,,],[],[])]),use_conditional_group(positive,postgres,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-db,postgresql,none,[,,],any_same_slot,[use(enable(threads),positive)])]),use_conditional_group(positive,mysql,portage://app-backup/bacula-13.0.4,[any_of_group([package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-db,mysql-connector-c,none,[,,],[],[]),package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-db,mariadb-connector-c,none,[,,],[],[])])]),use_conditional_group(positive,sqlite,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-db,sqlite,none,[,,],[slot(3)],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(negative,static,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-libs,lzo,none,[,,],[],[]),package_dependency(portage://app-backup/bacula-13.0.4,install,no,sys-libs,ncurses,none,[,,],any_same_slot,[]),package_dependency(portage://app-backup/bacula-13.0.4,install,no,sys-libs,zlib,none,[,,],[],[]),use_conditional_group(positive,acl,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,virtual,acl,none,[,,],[],[])]),use_conditional_group(positive,ssl,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-libs,openssl,none,[,,],[slot(0),equal],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,logwatch,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,sys-apps,logwatch,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,qt5,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-qt,qtcore,none,[,,],[slot(5)],[]),package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-qt,qtgui,none,[,,],[slot(5)],[]),package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-qt,qtwidgets,none,[,,],[slot(5)],[]),package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-qt,qtsvg,none,[,,],[slot(5)],[]),package_dependency(portage://app-backup/bacula-13.0.4,install,no,x11-libs,qwt,none,[,,],[slot(6)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,readline,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,sys-libs,readline,none,[,,],[slot(0)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,static,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-libs,lzo,none,[,,],[],[use(enable(static-libs),none)]),package_dependency(portage://app-backup/bacula-13.0.4,install,no,sys-libs,ncurses,none,[,,],any_same_slot,[use(enable(static-libs),none)]),package_dependency(portage://app-backup/bacula-13.0.4,install,no,sys-libs,zlib,none,[,,],[],[use(enable(static-libs),none)]),use_conditional_group(positive,acl,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,virtual,acl,none,[,,],[],[use(enable(static-libs),positive)])]),use_conditional_group(positive,ssl,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-libs,openssl,none,[,,],[slot(0),equal],[use(enable(static-libs),none)])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,tcpd,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,install,no,sys-apps,tcp-wrappers,greaterequal,[7.6,,,7.6],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-libs,gmp,none,[,,],[slot(0)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/bacula-13.0.4,install,no,dev-util,patchelf,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(negative,bacula-clientonly,portage://app-backup/bacula-13.0.4,[use_conditional_group(negative,bacula-nodir,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,virtual,mta,none,[,,],[],[])]),use_conditional_group(positive,postgres,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-db,postgresql,none,[,,],any_same_slot,[use(enable(threads),positive)])]),use_conditional_group(positive,mysql,portage://app-backup/bacula-13.0.4,[any_of_group([package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-db,mysql-connector-c,none,[,,],[],[]),package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-db,mariadb-connector-c,none,[,,],[],[])])]),use_conditional_group(positive,sqlite,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-db,sqlite,none,[,,],[slot(3)],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(negative,bacula-clientonly,portage://app-backup/bacula-13.0.4,[use_conditional_group(negative,bacula-nosd,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,app-arch,mt-st,none,[,,],[],[]),package_dependency(portage://app-backup/bacula-13.0.4,run,no,sys-block,mtx,none,[,,],[],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(negative,static,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-libs,lzo,none,[,,],[],[]),package_dependency(portage://app-backup/bacula-13.0.4,run,no,sys-libs,ncurses,none,[,,],any_same_slot,[]),package_dependency(portage://app-backup/bacula-13.0.4,run,no,sys-libs,zlib,none,[,,],[],[]),use_conditional_group(positive,acl,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,virtual,acl,none,[,,],[],[])]),use_conditional_group(positive,ssl,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-libs,openssl,none,[,,],[slot(0),equal],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,logwatch,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,sys-apps,logwatch,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,qt5,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-qt,qtcore,none,[,,],[slot(5)],[]),package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-qt,qtgui,none,[,,],[slot(5)],[]),package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-qt,qtwidgets,none,[,,],[slot(5)],[]),package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-qt,qtsvg,none,[,,],[slot(5)],[]),package_dependency(portage://app-backup/bacula-13.0.4,run,no,x11-libs,qwt,none,[,,],[slot(6)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,readline,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,sys-libs,readline,none,[,,],[slot(0)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,selinux,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,sec-policy,selinux-bacula,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,static,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-libs,lzo,none,[,,],[],[use(enable(static-libs),none)]),package_dependency(portage://app-backup/bacula-13.0.4,run,no,sys-libs,ncurses,none,[,,],any_same_slot,[use(enable(static-libs),none)]),package_dependency(portage://app-backup/bacula-13.0.4,run,no,sys-libs,zlib,none,[,,],[],[use(enable(static-libs),none)]),use_conditional_group(positive,acl,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,virtual,acl,none,[,,],[],[use(enable(static-libs),positive)])]),use_conditional_group(positive,ssl,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-libs,openssl,none,[,,],[slot(0),equal],[use(enable(static-libs),none)])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,tcpd,portage://app-backup/bacula-13.0.4,[package_dependency(portage://app-backup/bacula-13.0.4,run,no,sys-apps,tcp-wrappers,greaterequal,[7.6,,,7.6],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,vim-syntax,portage://app-backup/bacula-13.0.4,[any_of_group([package_dependency(portage://app-backup/bacula-13.0.4,run,no,app-editors,vim,none,[,,],[],[]),package_dependency(portage://app-backup/bacula-13.0.4,run,no,app-editors,gvim,none,[,,],[],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/bacula-13.0.4,run,no,acct-group,bacula,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/bacula-13.0.4,run,no,acct-user,bacula,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-libs,gmp,none,[,,],[slot(0)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/bacula-13.0.4,run,no,dev-util,patchelf,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
