digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://app-backup/dar-2.7.15", color=red, width=4, href="../app-backup/dar-2.7.15.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,argon2,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,install,no,app-crypt,argon2,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,curl,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,install,no,net-misc,curl,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gcrypt,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,install,no,dev-libs,libgcrypt,none,[,,],[slot(0),equal],[]),package_dependency(portage://app-backup/dar-2.7.15,install,no,dev-libs,libgpg-error,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gpg,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,install,no,app-crypt,gpgme,none,[,,],any_same_slot,[]),package_dependency(portage://app-backup/dar-2.7.15,install,no,dev-libs,libassuan,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lz4,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,install,no,app-arch,lz4,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lzo,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,install,no,dev-libs,lzo,none,[,,],[slot(2)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nls,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,install,no,virtual,libintl,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,rsync,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,install,no,net-libs,librsync,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xattr,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,install,no,sys-apps,attr,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/dar-2.7.15,install,no,app-arch,bzip2,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/dar-2.7.15,install,no,app-arch,xz-utils,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/dar-2.7.15,install,no,app-arch,zstd,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/dar-2.7.15,install,no,dev-libs,libthreadar,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/dar-2.7.15,install,no,sys-libs,libcap,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/dar-2.7.15,install,no,sys-libs,zlib,greaterequal,[1.2.3,,,1.2.3],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,argon2,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,run,no,app-crypt,argon2,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,curl,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,run,no,net-misc,curl,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gcrypt,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,run,no,dev-libs,libgcrypt,none,[,,],[slot(0),equal],[]),package_dependency(portage://app-backup/dar-2.7.15,run,no,dev-libs,libgpg-error,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gpg,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,run,no,app-crypt,gpgme,none,[,,],any_same_slot,[]),package_dependency(portage://app-backup/dar-2.7.15,run,no,dev-libs,libassuan,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lz4,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,run,no,app-arch,lz4,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lzo,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,run,no,dev-libs,lzo,none,[,,],[slot(2)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nls,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,run,no,virtual,libintl,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,rsync,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,run,no,net-libs,librsync,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xattr,portage://app-backup/dar-2.7.15,[package_dependency(portage://app-backup/dar-2.7.15,run,no,sys-apps,attr,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/dar-2.7.15,run,no,app-arch,bzip2,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/dar-2.7.15,run,no,app-arch,xz-utils,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/dar-2.7.15,run,no,app-arch,zstd,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/dar-2.7.15,run,no,dev-libs,libthreadar,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/dar-2.7.15,run,no,sys-libs,libcap,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-backup/dar-2.7.15,run,no,sys-libs,zlib,greaterequal,[1.2.3,,,1.2.3],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
