digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
rank=same;
label=<<i>ebuild</i>>;
id [label="portage://net-analyzer/termshark-2.4.0", color=red, width=4, href="../net-analyzer/termshark-2.4.0.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
subgraph pack245236 {
dependency333661 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>net-analyzer</TD></TR><TR><TD>wireshark</TD></TR><TR><TD>none</TD></TR><TR><TD>[,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency333661:w [weight=20,style="solid",arrowhead="odot"];
}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

subgraph choice245236 {
color=black;
nodesep=1;
choice110101116459711097108121122101114471191051141011151049711410745524648464949 [label="portage://net-analyzer/wireshark-4.0.11", color=red, width=4,href="../net-analyzer/wireshark-4.0.11.svg"];
choice110101116459711097108121122101114471191051141011151049711410745524648464953 [label="portage://net-analyzer/wireshark-4.0.15", color=red, width=4,href="../net-analyzer/wireshark-4.0.15.svg"];
choice11010111645971109710812112210111447119105114101115104971141074552465046524511449 [label="portage://net-analyzer/wireshark-4.2.4-r1", color=red, width=4,href="../net-analyzer/wireshark-4.2.4-r1.svg"];
choice1101011164597110971081211221011144711910511410111510497114107455246504653 [label="portage://net-analyzer/wireshark-4.2.5", color=red, width=4,href="../net-analyzer/wireshark-4.2.5.svg"];
choice11010111645971109710812112210111447119105114101115104971141074557575757 [label="portage://net-analyzer/wireshark-9999", color=red, width=4,href="../net-analyzer/wireshark-9999.svg"];
dependency333661:e -> choice110101116459711097108121122101114471191051141011151049711410745524648464949:w [style=dotted,weight="100"];
dependency333661:e -> choice110101116459711097108121122101114471191051141011151049711410745524648464953:w [style=dotted,weight="100"];
dependency333661:e -> choice11010111645971109710812112210111447119105114101115104971141074552465046524511449:w [style=dotted,weight="100"];
dependency333661:e -> choice1101011164597110971081211221011144711910511410111510497114107455246504653:w [style=dotted,weight="100"];
dependency333661:e -> choice11010111645971109710812112210111447119105114101115104971141074557575757:w [style=dotted,weight="100"];
}
}

}
