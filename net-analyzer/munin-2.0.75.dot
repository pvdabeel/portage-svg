digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://net-analyzer/munin-2.0.75", color=red, width=4, href="../net-analyzer/munin-2.0.75.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(negative,minimal,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,HTML-Template,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,IO-Socket-INET6,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,URI,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,net-analyzer,rrdtool,greaterequal,[1.3,,,1.3],[],[use(enable(graph),none),use(enable(perl),none)]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,virtual,ssh,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,apache2,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,www-servers,apache,none,[,,],[],[use(enable(apache2_modules_cgi),none),use(enable(apache2_modules_cgid),none),use(enable(apache2_modules_rewrite),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,asterisk,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Net-Telnet,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,cgi,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,FCGI,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,CGI-Fast,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dhcpd,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,net-misc,dhcp,greaterequal,[3,,,3],[],[use(enable(server),none)]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Net-IP,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,HTTP-Date,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,doc,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-python,sphinx,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,http,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,libwww-perl,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,irc,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Net-IRC,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,java,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-java,java-config,greaterequal,[2.2.0,,-r3,2.2.0-r3],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,java,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,virtual,jdk,greaterequal,[1.8,,,1.8],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,kernel_linux,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,sys-process,procps,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ldap,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,perl-ldap,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,memcached,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Cache-Memcached,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mysql,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,virtual,mysql,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Cache-Cache,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,DBD-mysql,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,postgres,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,DBD-Pg,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-db,postgresql,none,[,,],any_different_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ssl,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Net-SSLeay,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,syslog,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,virtual,perl-Sys-Syslog,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,test,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Test-Deep,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Test-Exception,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Test-LongString,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Test-Differences,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Test-MockModule,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Test-MockObject,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,File-Slurp,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,IO-stringy,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,IO-Socket-INET6,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,acct-group,munin,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,acct-user,munin,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,acct-user,munin-async,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-lang,perl,none,[,,],any_same_slot,[use(enable(berkdb),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,DBI,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,File-Copy-Recursive,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,List-MoreUtils,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Log-Log4perl,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Module-Build,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Net-CIDR,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Net-DNS,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Net-Netmask,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Net-SNMP,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,Net-Server,none,[,,],[],[use(optenable(ipv6),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,dev-perl,TimeDate,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,virtual,perl-Digest-MD5,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,virtual,perl-Getopt-Long,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,virtual,perl-MIME-Base64,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,virtual,perl-Storable,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,virtual,perl-Text-Balanced,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,install,no,virtual,perl-Time-HiRes,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(negative,minimal,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,HTML-Template,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,IO-Socket-INET6,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,URI,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,run,no,net-analyzer,rrdtool,greaterequal,[1.3,,,1.3],[],[use(enable(graph),none),use(enable(perl),none)]),package_dependency(portage://net-analyzer/munin-2.0.75,run,no,virtual,ssh,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(negative,minimal,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,virtual,cron,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,run,no,media-fonts,dejavu,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,apache2,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,www-servers,apache,none,[,,],[],[use(enable(apache2_modules_cgi),none),use(enable(apache2_modules_cgid),none),use(enable(apache2_modules_rewrite),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,asterisk,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,Net-Telnet,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,cgi,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,FCGI,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,CGI-Fast,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dhcpd,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,net-misc,dhcp,greaterequal,[3,,,3],[],[use(enable(server),none)]),package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,Net-IP,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,HTTP-Date,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,doc,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-python,sphinx,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,http,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,libwww-perl,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ipmi,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,sys-libs,freeipmi,greaterequal,[1.1.6,,-r1,1.1.6-r1],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,irc,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,Net-IRC,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,java,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-java,java-config,greaterequal,[2.2.0,,-r3,2.2.0-r3],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,java,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,virtual,jre,greaterequal,[1.8,,,1.8],any_different_slot,[]),any_of_group([package_dependency(portage://net-analyzer/munin-2.0.75,run,no,net-analyzer,netcat,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,run,no,net-analyzer,openbsd-netcat,none,[,,],[],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,kernel_linux,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,sys-process,procps,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ldap,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,perl-ldap,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,memcached,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,Cache-Memcached,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mysql,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,virtual,mysql,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,Cache-Cache,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,DBD-mysql,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,postgres,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,DBD-Pg,none,[,,],[],[]),package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-db,postgresql,none,[,,],any_different_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,selinux,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,sec-policy,selinux-munin,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ssl,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,Net-SSLeay,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,syslog,portage://net-analyzer/munin-2.0.75,[package_dependency(portage://net-analyzer/munin-2.0.75,run,no,virtual,perl-Sys-Syslog,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,acct-group,munin,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,acct-user,munin,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,acct-user,munin-async,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,app-alternatives,awk,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-lang,perl,none,[,,],any_same_slot,[use(enable(berkdb),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,DBI,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,File-Copy-Recursive,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,List-MoreUtils,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,Log-Log4perl,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,Net-CIDR,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,Net-DNS,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,Net-Netmask,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,Net-SNMP,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,Net-Server,none,[,,],[],[use(optenable(ipv6),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,dev-perl,TimeDate,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,virtual,perl-Digest-MD5,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,virtual,perl-Getopt-Long,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,virtual,perl-MIME-Base64,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,virtual,perl-Storable,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,virtual,perl-Text-Balanced,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,virtual,perl-Time-HiRes,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-analyzer/munin-2.0.75,run,no,virtual,tmpfiles,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
