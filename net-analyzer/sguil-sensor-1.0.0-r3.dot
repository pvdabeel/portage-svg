digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
rank=same;
label=<<i>ebuild</i>>;
id [label="portage://net-analyzer/sguil-sensor-1.0.0-r3", color=red, width=4, href="../net-analyzer/sguil-sensor-1.0.0-r3.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-analyzer/sguil-sensor-1.0.0-r3,install,no,acct-group,sguil,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-analyzer/sguil-sensor-1.0.0-r3,install,no,acct-user,sguil,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-analyzer/sguil-sensor-1.0.0-r3,run,no,acct-group,sguil,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-analyzer/sguil-sensor-1.0.0-r3,run,no,acct-user,sguil,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

subgraph pack1 {
dependency3 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-lang</TD></TR><TR><TD>tcl</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>8.3</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency3:w [weight=20,style="solid",arrowhead="odot"];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-analyzer/sguil-sensor-1.0.0-r3,run,no,dev-ml,pcre-ocaml,none,[,,],any_same_slot,[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

subgraph pack2 {
dependency4 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-tcltk</TD></TR><TR><TD>tclx</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>8.3</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency4:w [weight=20,style="solid",arrowhead="odot"];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-analyzer/sguil-sensor-1.0.0-r3,run,no,dev-tcltk,tls,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

subgraph pack3 {
dependency5 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>net-analyzer</TD></TR><TR><TD>barnyard</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>0.2.0-r1</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency5:w [weight=20,style="solid",arrowhead="odot"];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-analyzer/sguil-sensor-1.0.0-r3,run,no,net-analyzer,sancp,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

subgraph pack4 {
dependency6 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>net-analyzer</TD></TR><TR><TD>snort</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>2.4.1-r1</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency6:w [weight=20,style="solid",arrowhead="odot"];
}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

subgraph choice1 {
color=black;
nodesep=1;
choice1001011184510897110103471169910845564654464949 [label="portage://dev-lang/tcl-8.6.11", color=red, width=4,href="../dev-lang/tcl-8.6.11.svg"];
choice1001011184510897110103471169910845564654464950 [label="portage://dev-lang/tcl-8.6.12", color=red, width=4,href="../dev-lang/tcl-8.6.12.svg"];
dependency3:e -> choice1001011184510897110103471169910845564654464949:w [style=dotted,weight="100"];
dependency3:e -> choice1001011184510897110103471169910845564654464950:w [style=dotted,weight="100"];
}
subgraph choice2 {
color=black;
nodesep=1;
choice10010111845116991081161074711699108120455646524652 [label="portage://dev-tcltk/tclx-8.4.4", color=red, width=4,href="../dev-tcltk/tclx-8.4.4.svg"];
dependency4:e -> choice10010111845116991081161074711699108120455646524652:w [style=dotted,weight="100"];
}
subgraph choice3 {
color=black;
nodesep=1;
choice110101116459711097108121122101114479897114110121971141004548465046484511455 [label="portage://net-analyzer/barnyard-0.2.0-r7", color=red, width=4,href="../net-analyzer/barnyard-0.2.0-r7.svg"];
dependency5:e -> choice110101116459711097108121122101114479897114110121971141004548465046484511455:w [style=dotted,weight="100"];
}
subgraph choice4 {
color=black;
nodesep=1;
choice1101011164597110971081211221011144711511011111411645504657464955 [label="portage://net-analyzer/snort-2.9.17", color=red, width=4,href="../net-analyzer/snort-2.9.17.svg"];
choice11010111645971109710812112210111447115110111114116455046574649554511449 [label="portage://net-analyzer/snort-2.9.17-r1", color=red, width=4,href="../net-analyzer/snort-2.9.17-r1.svg"];
dependency6:e -> choice1101011164597110971081211221011144711511011111411645504657464955:w [style=dotted,weight="100"];
dependency6:e -> choice11010111645971109710812112210111447115110111114116455046574649554511449:w [style=dotted,weight="100"];
}
}

}
