digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://app-admin/mongo-tools-100.9.4", color=red, width=4, href="../app-admin/mongo-tools-100.9.4.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
subgraph cond729 {
dependency3266 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>kerberos</TD></TR></TABLE>>, shape=none, color=red];
subgraph pack2525 {
dependency3267 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">install</TD></TR><TR><TD>app-crypt</TD></TR><TR><TD>mit-krb5</TD></TR><TR><TD>none</TD></TR><TR><TD>[[],,,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
dependency3266:e -> dependency3267:w [weight=20,style="dashed",arrowhead="vee"];
}
id:e -> dependency3266:w [weight=20,style="solid",arrowhead="vee"];
subgraph cond730 {
dependency3268 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>sasl</TD></TR></TABLE>>, shape=none, color=red];
subgraph pack2526 {
dependency3269 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">install</TD></TR><TR><TD>dev-libs</TD></TR><TR><TD>cyrus-sasl</TD></TR><TR><TD>none</TD></TR><TR><TD>[[],,,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
dependency3268:e -> dependency3269:w [weight=20,style="dashed",arrowhead="vee"];
}
id:e -> dependency3268:w [weight=20,style="solid",arrowhead="vee"];
subgraph cond731 {
dependency3270 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>ssl</TD></TR></TABLE>>, shape=none, color=red];
subgraph pack2527 {
dependency3271 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">install</TD></TR><TR><TD>dev-libs</TD></TR><TR><TD>openssl</TD></TR><TR><TD>none</TD></TR><TR><TD>[[],,,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
dependency3270:e -> dependency3271:w [weight=20,style="dashed",arrowhead="vee"];
}
id:e -> dependency3270:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack2528 {
dependency3272 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">install</TD></TR><TR><TD>dev-lang</TD></TR><TR><TD>go</TD></TR><TR><TD>none</TD></TR><TR><TD>[[],,,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency3272:w [weight=20,style="solid",arrowhead="vee"];
}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

subgraph choice2525 {
color=black;
nodesep=1;
choice9711211245991141211121164710910511645107114985345494650494651 [label="portage://app-crypt/mit-krb5-1.21.3", color=red, width=4,href="../app-crypt/mit-krb5-1.21.3.svg"];
dependency3267:e -> choice9711211245991141211121164710910511645107114985345494650494651:w [style=dotted,weight="100"];
}
subgraph choice2526 {
color=black;
nodesep=1;
choice100101118451081059811547991211141171154511597115108455046494650564511453 [label="portage://dev-libs/cyrus-sasl-2.1.28-r5", color=red, width=4,href="../dev-libs/cyrus-sasl-2.1.28-r5.svg"];
choice100101118451081059811547991211141171154511597115108455046494650564511452 [label="portage://dev-libs/cyrus-sasl-2.1.28-r4", color=red, width=4,href="../dev-libs/cyrus-sasl-2.1.28-r4.svg"];
dependency3269:e -> choice100101118451081059811547991211141171154511597115108455046494650564511453:w [style=dotted,weight="100"];
dependency3269:e -> choice100101118451081059811547991211141171154511597115108455046494650564511452:w [style=dotted,weight="100"];
}
subgraph choice2527 {
color=black;
nodesep=1;
choice1001011184510810598115471111121011101151151084551465146494511451 [label="portage://dev-libs/openssl-3.3.1-r3", color=red, width=4,href="../dev-libs/openssl-3.3.1-r3.svg"];
choice100101118451081059811547111112101110115115108455146504650 [label="portage://dev-libs/openssl-3.2.2", color=red, width=4,href="../dev-libs/openssl-3.2.2.svg"];
choice100101118451081059811547111112101110115115108455146494654 [label="portage://dev-libs/openssl-3.1.6", color=red, width=4,href="../dev-libs/openssl-3.1.6.svg"];
choice10010111845108105981154711111210111011511510845514648464952 [label="portage://dev-libs/openssl-3.0.14", color=red, width=4,href="../dev-libs/openssl-3.0.14.svg"];
choice100101118451081059811547111112101110115115108455146484649514511450 [label="portage://dev-libs/openssl-3.0.13-r2", color=red, width=4,href="../dev-libs/openssl-3.0.13-r2.svg"];
choice100101118451081059811547111112101110115115108454946494649119 [label="portage://dev-libs/openssl-1.1.1w", color=red, width=4,href="../dev-libs/openssl-1.1.1w.svg"];
choice1001011184510810598115471111121011101151151084549464846501174511449 [label="portage://dev-libs/openssl-1.0.2u-r1", color=red, width=4,href="../dev-libs/openssl-1.0.2u-r1.svg"];
dependency3271:e -> choice1001011184510810598115471111121011101151151084551465146494511451:w [style=dotted,weight="100"];
dependency3271:e -> choice100101118451081059811547111112101110115115108455146504650:w [style=dotted,weight="100"];
dependency3271:e -> choice100101118451081059811547111112101110115115108455146494654:w [style=dotted,weight="100"];
dependency3271:e -> choice10010111845108105981154711111210111011511510845514648464952:w [style=dotted,weight="100"];
dependency3271:e -> choice100101118451081059811547111112101110115115108455146484649514511450:w [style=dotted,weight="100"];
dependency3271:e -> choice100101118451081059811547111112101110115115108454946494649119:w [style=dotted,weight="100"];
dependency3271:e -> choice1001011184510810598115471111121011101151151084549464846501174511449:w [style=dotted,weight="100"];
}
subgraph choice2528 {
color=black;
nodesep=1;
choice1001011184510897110103471031114557575757 [label="portage://dev-lang/go-9999", color=red, width=4,href="../dev-lang/go-9999.svg"];
choice10010111845108971101034710311145494650514649 [label="portage://dev-lang/go-1.23.1", color=red, width=4,href="../dev-lang/go-1.23.1.svg"];
choice10010111845108971101034710311145494650514648 [label="portage://dev-lang/go-1.23.0", color=red, width=4,href="../dev-lang/go-1.23.0.svg"];
choice10010111845108971101034710311145494650504655 [label="portage://dev-lang/go-1.22.7", color=red, width=4,href="../dev-lang/go-1.22.7.svg"];
choice10010111845108971101034710311145494650504654 [label="portage://dev-lang/go-1.22.6", color=red, width=4,href="../dev-lang/go-1.22.6.svg"];
dependency3272:e -> choice1001011184510897110103471031114557575757:w [style=dotted,weight="100"];
dependency3272:e -> choice10010111845108971101034710311145494650514649:w [style=dotted,weight="100"];
dependency3272:e -> choice10010111845108971101034710311145494650514648:w [style=dotted,weight="100"];
dependency3272:e -> choice10010111845108971101034710311145494650504655:w [style=dotted,weight="100"];
dependency3272:e -> choice10010111845108971101034710311145494650504654:w [style=dotted,weight="100"];
}
}

}
