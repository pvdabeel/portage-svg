digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://dev-haskell/test-framework-th-0.2.4", color=red, width=4, href="../dev-haskell/test-framework-th-0.2.4.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
subgraph cond21120 {
dependency89102 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>hscolour</TD></TR></TABLE>>, shape=none, color=red];
subgraph pack66960 {
dependency89103 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">install</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>hscolour</TD></TR><TR><TD>none</TD></TR><TR><TD>[,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
dependency89102:e -> dependency89103:w [weight=20,style="dashed",arrowhead="vee"];
}
id:e -> dependency89102:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack66961 {
dependency89104 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">install</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>cabal</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>[1.6,,,1.6]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency89104:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack66962 {
dependency89105 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">install</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>haskell-src-exts</TD></TR><TR><TD>none</TD></TR><TR><TD>[,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency89105:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack66963 {
dependency89106 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">install</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>language-haskell-extract</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>[0.2,,,0.2]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency89106:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack66964 {
dependency89107 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">install</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>regex-posix</TD></TR><TR><TD>none</TD></TR><TR><TD>[,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency89107:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack66965 {
dependency89108 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">install</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>test-framework</TD></TR><TR><TD>none</TD></TR><TR><TD>[,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency89108:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack66966 {
dependency89109 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">install</TD></TR><TR><TD>dev-lang</TD></TR><TR><TD>ghc</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>[7.4.1,,,7.4.1]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency89109:w [weight=20,style="solid",arrowhead="vee"];
}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
subgraph pack66967 {
dependency89110 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">run</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>haskell-src-exts</TD></TR><TR><TD>none</TD></TR><TR><TD>[,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency89110:w [weight=20,style="solid",arrowhead="odot"];
subgraph pack66968 {
dependency89111 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">run</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>language-haskell-extract</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>[0.2,,,0.2]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency89111:w [weight=20,style="solid",arrowhead="odot"];
subgraph pack66969 {
dependency89112 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">run</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>regex-posix</TD></TR><TR><TD>none</TD></TR><TR><TD>[,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency89112:w [weight=20,style="solid",arrowhead="odot"];
subgraph pack66970 {
dependency89113 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">run</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>test-framework</TD></TR><TR><TD>none</TD></TR><TR><TD>[,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency89113:w [weight=20,style="solid",arrowhead="odot"];
subgraph pack66971 {
dependency89114 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">run</TD></TR><TR><TD>dev-lang</TD></TR><TR><TD>ghc</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>[7.4.1,,,7.4.1]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency89114:w [weight=20,style="solid",arrowhead="odot"];
subgraph pack66972 {
dependency89115 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">run</TD></TR><TR><TD>dev-lang</TD></TR><TR><TD>ghc</TD></TR><TR><TD>none</TD></TR><TR><TD>[,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency89115:w [weight=20,style="solid",arrowhead="odot"];
}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

subgraph choice66960 {
color=black;
nodesep=1;
choice100101118451049711510710110810847104115991111081111171144549465053 [label="portage://dev-haskell/hscolour-1.25", color=red, width=4,href="../dev-haskell/hscolour-1.25.svg"];
choice1001011184510497115107101108108471041159911110811111711445494650524652 [label="portage://dev-haskell/hscolour-1.24.4", color=red, width=4,href="../dev-haskell/hscolour-1.24.4.svg"];
dependency89103:e -> choice100101118451049711510710110810847104115991111081111171144549465053:w [style=dotted,weight="100"];
dependency89103:e -> choice1001011184510497115107101108108471041159911110811111711445494650524652:w [style=dotted,weight="100"];
}
subgraph choice66961 {
color=black;
nodesep=1;
choice100101118451049711510710110810847999798971084551465446514648 [label="portage://dev-haskell/cabal-3.6.3.0", color=red, width=4,href="../dev-haskell/cabal-3.6.3.0.svg"];
choice1001011184510497115107101108108479997989710845514652464946484511449 [label="portage://dev-haskell/cabal-3.4.1.0-r1", color=red, width=4,href="../dev-haskell/cabal-3.4.1.0-r1.svg"];
dependency89104:e -> choice100101118451049711510710110810847999798971084551465446514648:w [style=dotted,weight="100"];
dependency89104:e -> choice1001011184510497115107101108108479997989710845514652464946484511449:w [style=dotted,weight="100"];
}
subgraph choice66962 {
color=black;
nodesep=1;
choice1001011184510497115107101108108471049711510710110810845115114994510112011611545494650514649 [label="portage://dev-haskell/haskell-src-exts-1.23.1", color=red, width=4,href="../dev-haskell/haskell-src-exts-1.23.1.svg"];
dependency89105:e -> choice1001011184510497115107101108108471049711510710110810845115114994510112011611545494650514649:w [style=dotted,weight="100"];
}
subgraph choice66963 {
color=black;
nodesep=1;
choice100101118451049711510710110810847108971101031179710310145104971151071011081084510112011611497991164548465046524511449 [label="portage://dev-haskell/language-haskell-extract-0.2.4-r1", color=red, width=4,href="../dev-haskell/language-haskell-extract-0.2.4-r1.svg"];
dependency89106:e -> choice100101118451049711510710110810847108971101031179710310145104971151071011081084510112011611497991164548465046524511449:w [style=dotted,weight="100"];
}
subgraph choice66964 {
color=black;
nodesep=1;
choice10010111845104971151071011081084711410110310112045112111115105120454846575446484649 [label="portage://dev-haskell/regex-posix-0.96.0.1", color=red, width=4,href="../dev-haskell/regex-posix-0.96.0.1.svg"];
choice10010111845104971151071011081084711410110310112045112111115105120454846575446484648 [label="portage://dev-haskell/regex-posix-0.96.0.0", color=red, width=4,href="../dev-haskell/regex-posix-0.96.0.0.svg"];
dependency89107:e -> choice10010111845104971151071011081084711410110310112045112111115105120454846575446484649:w [style=dotted,weight="100"];
dependency89107:e -> choice10010111845104971151071011081084711410110310112045112111115105120454846575446484648:w [style=dotted,weight="100"];
}
subgraph choice66965 {
color=black;
nodesep=1;
choice100101118451049711510710110810847116101115116451021149710910111911111410745484656465046484511452 [label="portage://dev-haskell/test-framework-0.8.2.0-r4", color=red, width=4,href="../dev-haskell/test-framework-0.8.2.0-r4.svg"];
dependency89108:e -> choice100101118451049711510710110810847116101115116451021149710910111911111410745484656465046484511452:w [style=dotted,weight="100"];
}
subgraph choice66966 {
color=black;
nodesep=1;
choice10010111845108971101034710310499455746504656 [label="portage://dev-lang/ghc-9.2.8", color=red, width=4,href="../dev-lang/ghc-9.2.8.svg"];
choice100101118451089711010347103104994557464846504511452 [label="portage://dev-lang/ghc-9.0.2-r4", color=red, width=4,href="../dev-lang/ghc-9.0.2-r4.svg"];
dependency89109:e -> choice10010111845108971101034710310499455746504656:w [style=dotted,weight="100"];
dependency89109:e -> choice100101118451089711010347103104994557464846504511452:w [style=dotted,weight="100"];
}
subgraph choice66967 {
color=black;
nodesep=1;
choice1001011184510497115107101108108471049711510710110810845115114994510112011611545494650514649 [label="portage://dev-haskell/haskell-src-exts-1.23.1", color=red, width=4,href="../dev-haskell/haskell-src-exts-1.23.1.svg"];
dependency89110:e -> choice1001011184510497115107101108108471049711510710110810845115114994510112011611545494650514649:w [style=dotted,weight="100"];
}
subgraph choice66968 {
color=black;
nodesep=1;
choice100101118451049711510710110810847108971101031179710310145104971151071011081084510112011611497991164548465046524511449 [label="portage://dev-haskell/language-haskell-extract-0.2.4-r1", color=red, width=4,href="../dev-haskell/language-haskell-extract-0.2.4-r1.svg"];
dependency89111:e -> choice100101118451049711510710110810847108971101031179710310145104971151071011081084510112011611497991164548465046524511449:w [style=dotted,weight="100"];
}
subgraph choice66969 {
color=black;
nodesep=1;
choice10010111845104971151071011081084711410110310112045112111115105120454846575446484649 [label="portage://dev-haskell/regex-posix-0.96.0.1", color=red, width=4,href="../dev-haskell/regex-posix-0.96.0.1.svg"];
choice10010111845104971151071011081084711410110310112045112111115105120454846575446484648 [label="portage://dev-haskell/regex-posix-0.96.0.0", color=red, width=4,href="../dev-haskell/regex-posix-0.96.0.0.svg"];
dependency89112:e -> choice10010111845104971151071011081084711410110310112045112111115105120454846575446484649:w [style=dotted,weight="100"];
dependency89112:e -> choice10010111845104971151071011081084711410110310112045112111115105120454846575446484648:w [style=dotted,weight="100"];
}
subgraph choice66970 {
color=black;
nodesep=1;
choice100101118451049711510710110810847116101115116451021149710910111911111410745484656465046484511452 [label="portage://dev-haskell/test-framework-0.8.2.0-r4", color=red, width=4,href="../dev-haskell/test-framework-0.8.2.0-r4.svg"];
dependency89113:e -> choice100101118451049711510710110810847116101115116451021149710910111911111410745484656465046484511452:w [style=dotted,weight="100"];
}
subgraph choice66971 {
color=black;
nodesep=1;
choice10010111845108971101034710310499455746504656 [label="portage://dev-lang/ghc-9.2.8", color=red, width=4,href="../dev-lang/ghc-9.2.8.svg"];
choice100101118451089711010347103104994557464846504511452 [label="portage://dev-lang/ghc-9.0.2-r4", color=red, width=4,href="../dev-lang/ghc-9.0.2-r4.svg"];
dependency89114:e -> choice10010111845108971101034710310499455746504656:w [style=dotted,weight="100"];
dependency89114:e -> choice100101118451089711010347103104994557464846504511452:w [style=dotted,weight="100"];
}
subgraph choice66972 {
color=black;
nodesep=1;
choice10010111845108971101034710310499455746504656 [label="portage://dev-lang/ghc-9.2.8", color=red, width=4,href="../dev-lang/ghc-9.2.8.svg"];
choice100101118451089711010347103104994557464846504511452 [label="portage://dev-lang/ghc-9.0.2-r4", color=red, width=4,href="../dev-lang/ghc-9.0.2-r4.svg"];
dependency89115:e -> choice10010111845108971101034710310499455746504656:w [style=dotted,weight="100"];
dependency89115:e -> choice100101118451089711010347103104994557464846504511452:w [style=dotted,weight="100"];
}
}

}
