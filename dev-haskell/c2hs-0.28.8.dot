digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://dev-haskell/c2hs-0.28.8", color=red, width=4, href="../dev-haskell/c2hs-0.28.8.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,regression,portage://dev-haskell/c2hs-0.28.8,[package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,shelly,greaterequal,[1.9.0,,,1.9.0],any_same_slot,[]),package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,shelly,smaller,[1.10.0,,,1.10.0],any_same_slot,[]),package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,text,none,[,,],any_same_slot,[]),package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,yaml,greaterequal,[0.8,,,0.8],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,test,portage://dev-haskell/c2hs-0.28.8,[package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,hunit,none,[,,],[],[]),package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,test-framework,none,[,,],[],[]),package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,test-framework-hunit,none,[,,],[],[]),use_conditional_group(negative,regression,portage://dev-haskell/c2hs-0.28.8,[package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,shelly,greaterequal,[1.9.0,,,1.9.0],[],[]),package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,shelly,smaller,[1.10.0,,,1.10.0],[],[]),package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,text,none,[,,],[],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,cabal,greaterequal,[2.2.0.1,,,2.2.0.1],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,dlist,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,language-c,greaterequal,[0.7.1,,,0.7.1],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-haskell,language-c,smaller,[0.10,,,0.10],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/c2hs-0.28.8,install,no,dev-lang,ghc,greaterequal,[8.4.3,,,8.4.3],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,regression,portage://dev-haskell/c2hs-0.28.8,[package_dependency(portage://dev-haskell/c2hs-0.28.8,run,no,dev-haskell,shelly,greaterequal,[1.9.0,,,1.9.0],any_same_slot,[]),package_dependency(portage://dev-haskell/c2hs-0.28.8,run,no,dev-haskell,shelly,smaller,[1.10.0,,,1.10.0],any_same_slot,[]),package_dependency(portage://dev-haskell/c2hs-0.28.8,run,no,dev-haskell,text,none,[,,],any_same_slot,[]),package_dependency(portage://dev-haskell/c2hs-0.28.8,run,no,dev-haskell,yaml,greaterequal,[0.8,,,0.8],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/c2hs-0.28.8,run,no,dev-haskell,dlist,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/c2hs-0.28.8,run,no,dev-haskell,language-c,greaterequal,[0.7.1,,,0.7.1],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/c2hs-0.28.8,run,no,dev-haskell,language-c,smaller,[0.10,,,0.10],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/c2hs-0.28.8,run,no,dev-lang,ghc,greaterequal,[8.4.3,,,8.4.3],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
