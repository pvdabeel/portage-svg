digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
rank=same;
label=<<i>ebuild</i>>;
id [label="portage://dev-haskell/regex-compat-0.95.2.1-r1", color=red, width=4, href="../dev-haskell/regex-compat-0.95.2.1-r1.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
subgraph cond20338 {
dependency84636 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>hscolour</TD></TR></TABLE>>, shape=none, color=red];
subgraph pack63317 {
dependency84637 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>hscolour</TD></TR><TR><TD>none</TD></TR><TR><TD>[,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
dependency84636:e -> dependency84637:w [weight=20,style="dashed",arrowhead="vee"];
}
id:e -> dependency84636:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack63318 {
dependency84638 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>cabal</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>[2.2.0.1,,,2.2.0.1]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency84638:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack63319 {
dependency84639 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>regex-base</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>[0.94,,,0.94]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency84639:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack63320 {
dependency84640 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>regex-base</TD></TR><TR><TD>smaller</TD></TR><TR><TD>[0.95,,,0.95]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency84640:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack63321 {
dependency84641 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>regex-posix</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>[0.96,,,0.96]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency84641:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack63322 {
dependency84642 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>regex-posix</TD></TR><TR><TD>smaller</TD></TR><TR><TD>[0.97,,,0.97]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency84642:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack63323 {
dependency84643 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-lang</TD></TR><TR><TD>ghc</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>[8.4.3,,,8.4.3]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency84643:w [weight=20,style="solid",arrowhead="vee"];
}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
subgraph pack63324 {
dependency84644 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>regex-base</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>[0.94,,,0.94]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency84644:w [weight=20,style="solid",arrowhead="odot"];
subgraph pack63325 {
dependency84645 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>regex-base</TD></TR><TR><TD>smaller</TD></TR><TR><TD>[0.95,,,0.95]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency84645:w [weight=20,style="solid",arrowhead="odot"];
subgraph pack63326 {
dependency84646 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>regex-posix</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>[0.96,,,0.96]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency84646:w [weight=20,style="solid",arrowhead="odot"];
subgraph pack63327 {
dependency84647 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-haskell</TD></TR><TR><TD>regex-posix</TD></TR><TR><TD>smaller</TD></TR><TR><TD>[0.97,,,0.97]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency84647:w [weight=20,style="solid",arrowhead="odot"];
subgraph pack63328 {
dependency84648 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-lang</TD></TR><TR><TD>ghc</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>[8.4.3,,,8.4.3]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency84648:w [weight=20,style="solid",arrowhead="odot"];
subgraph pack63329 {
dependency84649 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-lang</TD></TR><TR><TD>ghc</TD></TR><TR><TD>none</TD></TR><TR><TD>[,,]</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency84649:w [weight=20,style="solid",arrowhead="odot"];
}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

subgraph choice63317 {
color=black;
nodesep=1;
choice1001011184510497115107101108108471041159911110811111711445494650524652 [label="portage://dev-haskell/hscolour-1.24.4", color=red, width=4,href="../dev-haskell/hscolour-1.24.4.svg"];
choice100101118451049711510710110810847104115991111081111171144549465053 [label="portage://dev-haskell/hscolour-1.25", color=red, width=4,href="../dev-haskell/hscolour-1.25.svg"];
dependency84637:e -> choice1001011184510497115107101108108471041159911110811111711445494650524652:w [style=dotted,weight="100"];
dependency84637:e -> choice100101118451049711510710110810847104115991111081111171144549465053:w [style=dotted,weight="100"];
}
subgraph choice63318 {
color=black;
nodesep=1;
choice1001011184510497115107101108108479997989710845514652464946484511449 [label="portage://dev-haskell/cabal-3.4.1.0-r1", color=red, width=4,href="../dev-haskell/cabal-3.4.1.0-r1.svg"];
choice100101118451049711510710110810847999798971084551465446514648 [label="portage://dev-haskell/cabal-3.6.3.0", color=red, width=4,href="../dev-haskell/cabal-3.6.3.0.svg"];
dependency84638:e -> choice1001011184510497115107101108108479997989710845514652464946484511449:w [style=dotted,weight="100"];
dependency84638:e -> choice100101118451049711510710110810847999798971084551465446514648:w [style=dotted,weight="100"];
}
subgraph choice63319 {
color=black;
nodesep=1;
choice100101118451049711510710110810847114101103101120459897115101454846575246484649 [label="portage://dev-haskell/regex-base-0.94.0.1", color=red, width=4,href="../dev-haskell/regex-base-0.94.0.1.svg"];
choice100101118451049711510710110810847114101103101120459897115101454846575246484650 [label="portage://dev-haskell/regex-base-0.94.0.2", color=red, width=4,href="../dev-haskell/regex-base-0.94.0.2.svg"];
dependency84639:e -> choice100101118451049711510710110810847114101103101120459897115101454846575246484649:w [style=dotted,weight="100"];
dependency84639:e -> choice100101118451049711510710110810847114101103101120459897115101454846575246484650:w [style=dotted,weight="100"];
}
subgraph choice63320 {
color=black;
nodesep=1;
choice100101118451049711510710110810847114101103101120459897115101454846575246484649 [label="portage://dev-haskell/regex-base-0.94.0.1", color=red, width=4,href="../dev-haskell/regex-base-0.94.0.1.svg"];
choice100101118451049711510710110810847114101103101120459897115101454846575246484650 [label="portage://dev-haskell/regex-base-0.94.0.2", color=red, width=4,href="../dev-haskell/regex-base-0.94.0.2.svg"];
dependency84640:e -> choice100101118451049711510710110810847114101103101120459897115101454846575246484649:w [style=dotted,weight="100"];
dependency84640:e -> choice100101118451049711510710110810847114101103101120459897115101454846575246484650:w [style=dotted,weight="100"];
}
subgraph choice63321 {
color=black;
nodesep=1;
choice10010111845104971151071011081084711410110310112045112111115105120454846575446484648 [label="portage://dev-haskell/regex-posix-0.96.0.0", color=red, width=4,href="../dev-haskell/regex-posix-0.96.0.0.svg"];
choice10010111845104971151071011081084711410110310112045112111115105120454846575446484649 [label="portage://dev-haskell/regex-posix-0.96.0.1", color=red, width=4,href="../dev-haskell/regex-posix-0.96.0.1.svg"];
dependency84641:e -> choice10010111845104971151071011081084711410110310112045112111115105120454846575446484648:w [style=dotted,weight="100"];
dependency84641:e -> choice10010111845104971151071011081084711410110310112045112111115105120454846575446484649:w [style=dotted,weight="100"];
}
subgraph choice63322 {
color=black;
nodesep=1;
choice10010111845104971151071011081084711410110310112045112111115105120454846575446484648 [label="portage://dev-haskell/regex-posix-0.96.0.0", color=red, width=4,href="../dev-haskell/regex-posix-0.96.0.0.svg"];
choice10010111845104971151071011081084711410110310112045112111115105120454846575446484649 [label="portage://dev-haskell/regex-posix-0.96.0.1", color=red, width=4,href="../dev-haskell/regex-posix-0.96.0.1.svg"];
dependency84642:e -> choice10010111845104971151071011081084711410110310112045112111115105120454846575446484648:w [style=dotted,weight="100"];
dependency84642:e -> choice10010111845104971151071011081084711410110310112045112111115105120454846575446484649:w [style=dotted,weight="100"];
}
subgraph choice63323 {
color=black;
nodesep=1;
choice100101118451089711010347103104994557464846504511452 [label="portage://dev-lang/ghc-9.0.2-r4", color=red, width=4,href="../dev-lang/ghc-9.0.2-r4.svg"];
choice10010111845108971101034710310499455746504656 [label="portage://dev-lang/ghc-9.2.8", color=red, width=4,href="../dev-lang/ghc-9.2.8.svg"];
dependency84643:e -> choice100101118451089711010347103104994557464846504511452:w [style=dotted,weight="100"];
dependency84643:e -> choice10010111845108971101034710310499455746504656:w [style=dotted,weight="100"];
}
subgraph choice63324 {
color=black;
nodesep=1;
choice100101118451049711510710110810847114101103101120459897115101454846575246484649 [label="portage://dev-haskell/regex-base-0.94.0.1", color=red, width=4,href="../dev-haskell/regex-base-0.94.0.1.svg"];
choice100101118451049711510710110810847114101103101120459897115101454846575246484650 [label="portage://dev-haskell/regex-base-0.94.0.2", color=red, width=4,href="../dev-haskell/regex-base-0.94.0.2.svg"];
dependency84644:e -> choice100101118451049711510710110810847114101103101120459897115101454846575246484649:w [style=dotted,weight="100"];
dependency84644:e -> choice100101118451049711510710110810847114101103101120459897115101454846575246484650:w [style=dotted,weight="100"];
}
subgraph choice63325 {
color=black;
nodesep=1;
choice100101118451049711510710110810847114101103101120459897115101454846575246484649 [label="portage://dev-haskell/regex-base-0.94.0.1", color=red, width=4,href="../dev-haskell/regex-base-0.94.0.1.svg"];
choice100101118451049711510710110810847114101103101120459897115101454846575246484650 [label="portage://dev-haskell/regex-base-0.94.0.2", color=red, width=4,href="../dev-haskell/regex-base-0.94.0.2.svg"];
dependency84645:e -> choice100101118451049711510710110810847114101103101120459897115101454846575246484649:w [style=dotted,weight="100"];
dependency84645:e -> choice100101118451049711510710110810847114101103101120459897115101454846575246484650:w [style=dotted,weight="100"];
}
subgraph choice63326 {
color=black;
nodesep=1;
choice10010111845104971151071011081084711410110310112045112111115105120454846575446484648 [label="portage://dev-haskell/regex-posix-0.96.0.0", color=red, width=4,href="../dev-haskell/regex-posix-0.96.0.0.svg"];
choice10010111845104971151071011081084711410110310112045112111115105120454846575446484649 [label="portage://dev-haskell/regex-posix-0.96.0.1", color=red, width=4,href="../dev-haskell/regex-posix-0.96.0.1.svg"];
dependency84646:e -> choice10010111845104971151071011081084711410110310112045112111115105120454846575446484648:w [style=dotted,weight="100"];
dependency84646:e -> choice10010111845104971151071011081084711410110310112045112111115105120454846575446484649:w [style=dotted,weight="100"];
}
subgraph choice63327 {
color=black;
nodesep=1;
choice10010111845104971151071011081084711410110310112045112111115105120454846575446484648 [label="portage://dev-haskell/regex-posix-0.96.0.0", color=red, width=4,href="../dev-haskell/regex-posix-0.96.0.0.svg"];
choice10010111845104971151071011081084711410110310112045112111115105120454846575446484649 [label="portage://dev-haskell/regex-posix-0.96.0.1", color=red, width=4,href="../dev-haskell/regex-posix-0.96.0.1.svg"];
dependency84647:e -> choice10010111845104971151071011081084711410110310112045112111115105120454846575446484648:w [style=dotted,weight="100"];
dependency84647:e -> choice10010111845104971151071011081084711410110310112045112111115105120454846575446484649:w [style=dotted,weight="100"];
}
subgraph choice63328 {
color=black;
nodesep=1;
choice100101118451089711010347103104994557464846504511452 [label="portage://dev-lang/ghc-9.0.2-r4", color=red, width=4,href="../dev-lang/ghc-9.0.2-r4.svg"];
choice10010111845108971101034710310499455746504656 [label="portage://dev-lang/ghc-9.2.8", color=red, width=4,href="../dev-lang/ghc-9.2.8.svg"];
dependency84648:e -> choice100101118451089711010347103104994557464846504511452:w [style=dotted,weight="100"];
dependency84648:e -> choice10010111845108971101034710310499455746504656:w [style=dotted,weight="100"];
}
subgraph choice63329 {
color=black;
nodesep=1;
choice100101118451089711010347103104994557464846504511452 [label="portage://dev-lang/ghc-9.0.2-r4", color=red, width=4,href="../dev-lang/ghc-9.0.2-r4.svg"];
choice10010111845108971101034710310499455746504656 [label="portage://dev-lang/ghc-9.2.8", color=red, width=4,href="../dev-lang/ghc-9.2.8.svg"];
dependency84649:e -> choice100101118451089711010347103104994557464846504511452:w [style=dotted,weight="100"];
dependency84649:e -> choice10010111845108971101034710310499455746504656:w [style=dotted,weight="100"];
}
}

}
