digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://dev-haskell/cryptohash-sha256-0.11.101.0", color=red, width=4, href="../dev-haskell/cryptohash-sha256-0.11.101.0.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,hscolour,portage://dev-haskell/cryptohash-sha256-0.11.101.0,[package_dependency(portage://dev-haskell/cryptohash-sha256-0.11.101.0,install,no,dev-haskell,hscolour,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,test,portage://dev-haskell/cryptohash-sha256-0.11.101.0,[package_dependency(portage://dev-haskell/cryptohash-sha256-0.11.101.0,install,no,dev-haskell,base16-bytestring,greaterequal,[0.1.1,,,0.1.1],[],[]),package_dependency(portage://dev-haskell/cryptohash-sha256-0.11.101.0,install,no,dev-haskell,base16-bytestring,smaller,[0.2,,,0.2],[],[]),package_dependency(portage://dev-haskell/cryptohash-sha256-0.11.101.0,install,no,dev-haskell,sha,greaterequal,[1.6.4,,,1.6.4],[],[]),package_dependency(portage://dev-haskell/cryptohash-sha256-0.11.101.0,install,no,dev-haskell,sha,smaller,[1.7,,,1.7],[],[]),package_dependency(portage://dev-haskell/cryptohash-sha256-0.11.101.0,install,no,dev-haskell,tasty,greaterequal,[0.11,,,0.11],[],[]),package_dependency(portage://dev-haskell/cryptohash-sha256-0.11.101.0,install,no,dev-haskell,tasty-hunit,greaterequal,[0.9,,,0.9],[],[]),package_dependency(portage://dev-haskell/cryptohash-sha256-0.11.101.0,install,no,dev-haskell,tasty-quickcheck,greaterequal,[0.8,,,0.8],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/cryptohash-sha256-0.11.101.0,install,no,dev-haskell,cabal,greaterequal,[1.12,,,1.12],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/cryptohash-sha256-0.11.101.0,install,no,dev-lang,ghc,greaterequal,[7.4.1,,,7.4.1],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/cryptohash-sha256-0.11.101.0,run,no,dev-lang,ghc,greaterequal,[7.4.1,,,7.4.1],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/cryptohash-sha256-0.11.101.0,run,no,dev-lang,ghc,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
