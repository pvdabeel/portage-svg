digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://dev-haskell/feed-1.3.2.1-r2", color=red, width=4, href="../dev-haskell/feed-1.3.2.1-r2.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(any_of_group([package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,text,smaller,[1.3,,,1.3],[],[]),package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,text,equal,[2.0*,,,2.0*],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,hscolour,portage://dev-haskell/feed-1.3.2.1-r2,[package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,hscolour,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,test,portage://dev-haskell/feed-1.3.2.1-r2,[package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,text,none,[,,],[],[]),package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,doctest,none,[,,],[],[]),package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,doctest-driver-gen,none,[,,],[],[]),package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,hunit,greaterequal,[1.2,,,1.2],[],[]),package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,hunit,smaller,[1.7,,,1.7],[],[]),package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,syb,none,[,,],[],[]),package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,test-framework,equal,[0.8*,,,0.8*],[],[]),package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,test-framework-hunit,equal,[0.3*,,,0.3*],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,base-compat,greaterequal,[0.9,,,0.9],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,base-compat,smaller,[0.14,,,0.14],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,cabal,greaterequal,[3.2.1.0,,,3.2.1.0],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,old-locale,equal,[1.0*,,,1.0*],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,old-time,greaterequal,[1,,,1],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,old-time,smaller,[1.2,,,1.2],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,safe,equal,[0.3*,,,0.3*],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,text,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,time-locale-compat,equal,[0.1*,,,0.1*],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,utf8-string,smaller,[1.1,,,1.1],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,xml-conduit,greaterequal,[1.3,,,1.3],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,xml-conduit,smaller,[1.10,,,1.10],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,xml-types,greaterequal,[0.3.6,,,0.3.6],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,install,no,dev-haskell,xml-types,smaller,[0.4,,,0.4],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(any_of_group([package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,text,smaller,[1.3,,,1.3],[],[]),package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,text,equal,[2.0*,,,2.0*],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,base-compat,greaterequal,[0.9,,,0.9],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,base-compat,smaller,[0.14,,,0.14],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,old-locale,equal,[1.0*,,,1.0*],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,old-time,greaterequal,[1,,,1],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,old-time,smaller,[1.2,,,1.2],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,safe,equal,[0.3*,,,0.3*],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,text,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,time-locale-compat,equal,[0.1*,,,0.1*],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,utf8-string,smaller,[1.1,,,1.1],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,xml-conduit,greaterequal,[1.3,,,1.3],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,xml-conduit,smaller,[1.10,,,1.10],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,xml-types,greaterequal,[0.3.6,,,0.3.6],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-haskell,xml-types,smaller,[0.4,,,0.4],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/feed-1.3.2.1-r2,run,no,dev-lang,ghc,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
