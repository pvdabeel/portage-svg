digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://dev-haskell/time-compat-1.9.6.1-r1", color=red, width=4, href="../dev-haskell/time-compat-1.9.6.1-r1.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,hscolour,portage://dev-haskell/time-compat-1.9.6.1-r1,[package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,hscolour,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,test,portage://dev-haskell/time-compat-1.9.6.1-r1,[package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,base-compat,greaterequal,[0.10.5,,,0.10.5],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,base-compat,smaller,[0.14,,,0.14],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,quickcheck,greaterequal,[2.13,,,2.13],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,quickcheck,smaller,[2.15,,,2.15],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,tagged,greaterequal,[0.8.6,,,0.8.6],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,tagged,smaller,[0.9,,,0.9],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,tasty,greaterequal,[1.2.1,,,1.2.1],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,tasty,smaller,[1.5,,,1.5],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,tasty-hunit,greaterequal,[0.10,,,0.10],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,tasty-hunit,smaller,[0.11,,,0.11],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,tasty-quickcheck,greaterequal,[0.10,,,0.10],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,tasty-quickcheck,smaller,[0.11,,,0.11],[],[]),any_of_group([all_of_group([package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,hunit,greaterequal,[1.3.1,,,1.3.1],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,hunit,smaller,[1.3.2,,,1.3.2],[],[])]),all_of_group([package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,hunit,greaterequal,[1.6.0.0,,,1.6.0.0],[],[]),package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,hunit,smaller,[1.7,,,1.7],[],[])])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,base-orphans,greaterequal,[0.8.4,,,0.8.4],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,base-orphans,smaller,[0.10,,,0.10],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,cabal,greaterequal,[3.0.0.0,,,3.0.0.0],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,hashable,greaterequal,[1.3.2.0,,,1.3.2.0],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-haskell,hashable,smaller,[1.5,,,1.5],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,install,no,dev-lang,ghc,greaterequal,[8.8.1,,,8.8.1],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,run,no,dev-haskell,base-orphans,greaterequal,[0.8.4,,,0.8.4],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,run,no,dev-haskell,base-orphans,smaller,[0.10,,,0.10],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,run,no,dev-haskell,hashable,greaterequal,[1.3.2.0,,,1.3.2.0],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,run,no,dev-haskell,hashable,smaller,[1.5,,,1.5],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,run,no,dev-lang,ghc,greaterequal,[8.8.1,,,8.8.1],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/time-compat-1.9.6.1-r1,run,no,dev-lang,ghc,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
