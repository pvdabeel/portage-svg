digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://dev-haskell/yaml-0.11.8.0", color=red, width=4, href="../dev-haskell/yaml-0.11.8.0.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,examples,portage://dev-haskell/yaml-0.11.8.0,[package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,raw-strings-qq,none,[,,],any_same_slot,[use(optenable(profile),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,executable,portage://dev-haskell/yaml-0.11.8.0,[package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,optparse-applicative,none,[,,],any_same_slot,[use(optenable(profile),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,hscolour,portage://dev-haskell/yaml-0.11.8.0,[package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,hscolour,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,test,portage://dev-haskell/yaml-0.11.8.0,[package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,base-compat,none,[,,],[],[]),package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,hspec,greaterequal,[1.3,,,1.3],[],[]),package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,hunit,none,[,,],[],[]),package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,mockery,none,[,,],[],[]),package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,temporary,none,[,,],[],[]),use_conditional_group(negative,examples,portage://dev-haskell/yaml-0.11.8.0,[package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,raw-strings-qq,none,[,,],[],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,aeson,greaterequal,[0.11,,,0.11],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,attoparsec,greaterequal,[0.11.3.0,,,0.11.3.0],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,cabal,greaterequal,[2.2.0.1,,,2.2.0.1],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,conduit,greaterequal,[1.2.8,,,1.2.8],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,conduit,smaller,[1.4,,,1.4],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,libyaml,greaterequal,[0.1,,,0.1],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,libyaml,smaller,[0.2,,,0.2],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,resourcet,greaterequal,[0.3,,,0.3],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,resourcet,smaller,[1.3,,,1.3],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,scientific,greaterequal,[0.3,,,0.3],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,unordered-containers,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-haskell,vector,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,install,no,dev-lang,ghc,greaterequal,[8.4.3,,,8.4.3],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,examples,portage://dev-haskell/yaml-0.11.8.0,[package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,raw-strings-qq,none,[,,],any_same_slot,[use(optenable(profile),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,executable,portage://dev-haskell/yaml-0.11.8.0,[package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,optparse-applicative,none,[,,],any_same_slot,[use(optenable(profile),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,aeson,greaterequal,[0.11,,,0.11],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,attoparsec,greaterequal,[0.11.3.0,,,0.11.3.0],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,conduit,greaterequal,[1.2.8,,,1.2.8],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,conduit,smaller,[1.4,,,1.4],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,libyaml,greaterequal,[0.1,,,0.1],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,libyaml,smaller,[0.2,,,0.2],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,resourcet,greaterequal,[0.3,,,0.3],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,resourcet,smaller,[1.3,,,1.3],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,scientific,greaterequal,[0.3,,,0.3],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,unordered-containers,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-haskell,vector,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-lang,ghc,greaterequal,[8.4.3,,,8.4.3],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/yaml-0.11.8.0,run,no,dev-lang,ghc,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
