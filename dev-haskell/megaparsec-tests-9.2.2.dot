digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://dev-haskell/megaparsec-tests-9.2.2", color=red, width=4, href="../dev-haskell/megaparsec-tests-9.2.2.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,hscolour,portage://dev-haskell/megaparsec-tests-9.2.2,[package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,hscolour,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,test,portage://dev-haskell/megaparsec-tests-9.2.2,[package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,case-insensitive,greaterequal,[1.2,,,1.2],[],[]),package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,case-insensitive,smaller,[1.3,,,1.3],[],[]),package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,parser-combinators,greaterequal,[1.0,,,1.0],[],[]),package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,parser-combinators,smaller,[2.0,,,2.0],[],[]),package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,scientific,greaterequal,[0.3.1,,,0.3.1],[],[]),package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,scientific,smaller,[0.4,,,0.4],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,cabal,greaterequal,[3.4.1.0,,,3.4.1.0],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,hspec,greaterequal,[2.0,,,2.0],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,hspec,smaller,[3.0,,,3.0],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,hspec-expectations,greaterequal,[0.8,,,0.8],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,hspec-expectations,smaller,[0.9,,,0.9],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,hspec-megaparsec,greaterequal,[2.0,,,2.0],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,hspec-megaparsec,smaller,[3.0,,,3.0],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,megaparsec,tilde,[9.2.2,,,9.2.2],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,quickcheck,greaterequal,[2.10,,,2.10],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-haskell,quickcheck,smaller,[2.15,,,2.15],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,install,no,dev-lang,ghc,greaterequal,[9.0.2,,,9.0.2],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,run,no,dev-haskell,hspec,greaterequal,[2.0,,,2.0],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,run,no,dev-haskell,hspec,smaller,[3.0,,,3.0],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,run,no,dev-haskell,hspec-expectations,greaterequal,[0.8,,,0.8],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,run,no,dev-haskell,hspec-expectations,smaller,[0.9,,,0.9],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,run,no,dev-haskell,hspec-megaparsec,greaterequal,[2.0,,,2.0],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,run,no,dev-haskell,hspec-megaparsec,smaller,[3.0,,,3.0],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,run,no,dev-haskell,megaparsec,tilde,[9.2.2,,,9.2.2],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,run,no,dev-haskell,quickcheck,greaterequal,[2.10,,,2.10],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,run,no,dev-haskell,quickcheck,smaller,[2.15,,,2.15],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,run,no,dev-lang,ghc,greaterequal,[9.0.2,,,9.0.2],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/megaparsec-tests-9.2.2,run,no,dev-lang,ghc,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
