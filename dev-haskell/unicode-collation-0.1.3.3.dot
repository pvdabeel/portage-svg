digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://dev-haskell/unicode-collation-0.1.3.3", color=red, width=4, href="../dev-haskell/unicode-collation-0.1.3.3.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,hscolour,portage://dev-haskell/unicode-collation-0.1.3.3,[package_dependency(portage://dev-haskell/unicode-collation-0.1.3.3,install,no,dev-haskell,hscolour,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,test,portage://dev-haskell/unicode-collation-0.1.3.3,[package_dependency(portage://dev-haskell/unicode-collation-0.1.3.3,install,no,dev-haskell,tasty,none,[,,],[],[]),package_dependency(portage://dev-haskell/unicode-collation-0.1.3.3,install,no,dev-haskell,tasty-hunit,none,[,,],[],[]),package_dependency(portage://dev-haskell/unicode-collation-0.1.3.3,install,no,dev-haskell,tasty-quickcheck,none,[,,],[],[]),package_dependency(portage://dev-haskell/unicode-collation-0.1.3.3,install,no,dev-haskell,unicode-transforms,greaterequal,[0.3.7.1,,,0.3.7.1],[],[]),use_conditional_group(positive,doctests,portage://dev-haskell/unicode-collation-0.1.3.3,[package_dependency(portage://dev-haskell/unicode-collation-0.1.3.3,install,no,dev-haskell,doctest,greaterequal,[0.8,,,0.8],[],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/unicode-collation-0.1.3.3,install,no,dev-haskell,cabal,greaterequal,[2.2.0.1,,,2.2.0.1],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/unicode-collation-0.1.3.3,install,no,dev-haskell,th-lift-instances,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/unicode-collation-0.1.3.3,install,no,dev-lang,ghc,greaterequal,[8.4.3,,,8.4.3],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/unicode-collation-0.1.3.3,run,no,dev-haskell,th-lift-instances,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/unicode-collation-0.1.3.3,run,no,dev-lang,ghc,greaterequal,[8.4.3,,,8.4.3],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-haskell/unicode-collation-0.1.3.3,run,no,dev-lang,ghc,none,[,,],any_same_slot,[use(optenable(profile),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
