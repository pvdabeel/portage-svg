digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
rank=same;
label=<<i>ebuild</i>>;
id [label="net-irc/shadowircd-6.3.3-r1", color=red, width=4, href="../net-irc/shadowircd-6.3.3-r1.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
subgraph pack213 {
dependency321 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>sys-devel</TD></TR><TR><TD>flex</TD></TR><TR><TD>none</TD></TR><TR><TD></TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency321:w [weight=20,style="solid",arrowhead="vee"];
subgraph pack214 {
dependency322 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>virtual</TD></TR><TR><TD>yacc</TD></TR><TR><TD>none</TD></TR><TR><TD></TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency322:w [weight=20,style="solid",arrowhead="vee"];
}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
subgraph cond106 {
dependency323 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>ssl</TD></TR></TABLE>>, shape=none, color=red];
subgraph pack215 {
dependency324 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-libs</TD></TR><TR><TD>openssl</TD></TR><TR><TD>none</TD></TR><TR><TD></TD></TR></TABLE>>, shape=none, color=blue];
}
dependency323:e -> dependency324:w [weight=20,style="dashed",arrowhead="vee"];
}
id:e -> dependency323:w [weight=20,style="solid",arrowhead="odotvee"];
subgraph cond107 {
dependency325 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>zlib</TD></TR></TABLE>>, shape=none, color=red];
subgraph pack216 {
dependency326 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>sys-libs</TD></TR><TR><TD>zlib</TD></TR><TR><TD>none</TD></TR><TR><TD></TD></TR></TABLE>>, shape=none, color=blue];
}
dependency325:e -> dependency326:w [weight=20,style="dashed",arrowhead="vee"];
}
id:e -> dependency325:w [weight=20,style="solid",arrowhead="odotvee"];
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

subgraph choice213 {
color=black;
nodesep=1;
choice1151211154510010111810110847102108101120455046544649 [label="sys-devel/flex-2.6.1", color=red, width=4,href="../sys-devel/flex-2.6.1.svg"];
choice1151211154510010111810110847102108101120455046544651 [label="sys-devel/flex-2.6.3", color=red, width=4,href="../sys-devel/flex-2.6.3.svg"];
choice11512111545100101118101108471021081011204550465446514511449 [label="sys-devel/flex-2.6.3-r1", color=red, width=4,href="../sys-devel/flex-2.6.3-r1.svg"];
choice1151211154510010111810110847102108101120455046544652 [label="sys-devel/flex-2.6.4", color=red, width=4,href="../sys-devel/flex-2.6.4.svg"];
choice11512111545100101118101108471021081011204550465446524511449 [label="sys-devel/flex-2.6.4-r1", color=red, width=4,href="../sys-devel/flex-2.6.4-r1.svg"];
dependency321:e -> choice1151211154510010111810110847102108101120455046544649:w [style=dotted,weight="100"];
dependency321:e -> choice1151211154510010111810110847102108101120455046544651:w [style=dotted,weight="100"];
dependency321:e -> choice11512111545100101118101108471021081011204550465446514511449:w [style=dotted,weight="100"];
dependency321:e -> choice1151211154510010111810110847102108101120455046544652:w [style=dotted,weight="100"];
dependency321:e -> choice11512111545100101118101108471021081011204550465446524511449:w [style=dotted,weight="100"];
}
subgraph choice214 {
color=black;
nodesep=1;
choice11810511411611797108471219799994548 [label="virtual/yacc-0", color=red, width=4,href="../virtual/yacc-0.svg"];
dependency322:e -> choice11810511411611797108471219799994548:w [style=dotted,weight="100"];
}
subgraph choice215 {
color=black;
nodesep=1;
choice1001011184510810598115471111121011101151151084548465746561229511256 [label="dev-libs/openssl-0.9.8z_p8", color=red, width=4,href="../dev-libs/openssl-0.9.8z_p8.svg"];
choice100101118451081059811547111112101110115115108454946484650107 [label="dev-libs/openssl-1.0.2k", color=red, width=4,href="../dev-libs/openssl-1.0.2k.svg"];
choice100101118451081059811547111112101110115115108454946484650108 [label="dev-libs/openssl-1.0.2l", color=red, width=4,href="../dev-libs/openssl-1.0.2l.svg"];
choice1001011184510810598115471111121011101151151084549464846501084511449 [label="dev-libs/openssl-1.0.2l-r1", color=red, width=4,href="../dev-libs/openssl-1.0.2l-r1.svg"];
choice100101118451081059811547111112101110115115108454946484650109 [label="dev-libs/openssl-1.0.2m", color=red, width=4,href="../dev-libs/openssl-1.0.2m.svg"];
choice100101118451081059811547111112101110115115108454946484650110 [label="dev-libs/openssl-1.0.2n", color=red, width=4,href="../dev-libs/openssl-1.0.2n.svg"];
choice1001011184510810598115471111121011101151151084549464946481034511450 [label="dev-libs/openssl-1.1.0g-r2", color=red, width=4,href="../dev-libs/openssl-1.1.0g-r2.svg"];
dependency324:e -> choice1001011184510810598115471111121011101151151084548465746561229511256:w [style=dotted,weight="100"];
dependency324:e -> choice100101118451081059811547111112101110115115108454946484650107:w [style=dotted,weight="100"];
dependency324:e -> choice100101118451081059811547111112101110115115108454946484650108:w [style=dotted,weight="100"];
dependency324:e -> choice1001011184510810598115471111121011101151151084549464846501084511449:w [style=dotted,weight="100"];
dependency324:e -> choice100101118451081059811547111112101110115115108454946484650109:w [style=dotted,weight="100"];
dependency324:e -> choice100101118451081059811547111112101110115115108454946484650110:w [style=dotted,weight="100"];
dependency324:e -> choice1001011184510810598115471111121011101151151084549464946481034511450:w [style=dotted,weight="100"];
}
subgraph choice216 {
color=black;
nodesep=1;
choice1151211154510810598115471221081059845494650464949 [label="sys-libs/zlib-1.2.11", color=red, width=4,href="../sys-libs/zlib-1.2.11.svg"];
choice11512111545108105981154712210810598454946504649494511449 [label="sys-libs/zlib-1.2.11-r1", color=red, width=4,href="../sys-libs/zlib-1.2.11-r1.svg"];
dependency326:e -> choice1151211154510810598115471221081059845494650464949:w [style=dotted,weight="100"];
dependency326:e -> choice11512111545108105981154712210810598454946504649494511449:w [style=dotted,weight="100"];
}
}

}
