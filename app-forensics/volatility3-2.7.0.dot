digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://app-forensics/volatility3-2.7.0", color=red, width=4, href="../app-forensics/volatility3-2.7.0.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,crypt,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,install,no,dev-python,pycryptodome,greaterequal,[3,,,3],[],[use(optenable(python_targets_python3_10),negative),use(optenable(python_targets_python3_11),negative),use(optenable(python_targets_python3_12),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,disasm,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,install,no,dev-libs,capstone,greaterequal,[3.0.5,,,3.0.5],[],[use(enable(python),none),use(optenable(python_targets_python3_10),negative),use(optenable(python_targets_python3_11),negative),use(optenable(python_targets_python3_12),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jsonschema,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,install,no,dev-python,jsonschema,greaterequal,[2.3.0,,,2.3.0],[],[use(optenable(python_targets_python3_10),negative),use(optenable(python_targets_python3_11),negative),use(optenable(python_targets_python3_12),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,leechcore,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,install,no,dev-python,leechcorepyc,greaterequal,[2.4.0,,,2.4.0],[],[use(optenable(python_targets_python3_10),negative),use(optenable(python_targets_python3_11),negative),use(optenable(python_targets_python3_12),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,snappy,portage://app-forensics/volatility3-2.7.0,[any_of_group([package_dependency(portage://app-forensics/volatility3-2.7.0,install,no,app-arch,snappy,none,[,,],[slot(0),subslot(1.1)],[]),package_dependency(portage://app-forensics/volatility3-2.7.0,install,no,app-arch,snappy,none,[,,],[slot(0),subslot(1.2)],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,yara,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,install,no,dev-python,yara-python,greaterequal,[3.8.0,,,3.8.0],[],[use(optenable(python_targets_python3_10),negative),use(optenable(python_targets_python3_11),negative),use(optenable(python_targets_python3_12),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-forensics/volatility3-2.7.0,install,no,dev-python,pefile,greaterequal,[2023.2.7,,,2023.2.7],[],[use(optenable(python_targets_python3_10),negative),use(optenable(python_targets_python3_11),negative),use(optenable(python_targets_python3_12),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,crypt,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,run,no,dev-python,pycryptodome,greaterequal,[3,,,3],[],[use(optenable(python_targets_python3_10),negative),use(optenable(python_targets_python3_11),negative),use(optenable(python_targets_python3_12),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,disasm,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,run,no,dev-libs,capstone,greaterequal,[3.0.5,,,3.0.5],[],[use(enable(python),none),use(optenable(python_targets_python3_10),negative),use(optenable(python_targets_python3_11),negative),use(optenable(python_targets_python3_12),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jsonschema,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,run,no,dev-python,jsonschema,greaterequal,[2.3.0,,,2.3.0],[],[use(optenable(python_targets_python3_10),negative),use(optenable(python_targets_python3_11),negative),use(optenable(python_targets_python3_12),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,leechcore,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,run,no,dev-python,leechcorepyc,greaterequal,[2.4.0,,,2.4.0],[],[use(optenable(python_targets_python3_10),negative),use(optenable(python_targets_python3_11),negative),use(optenable(python_targets_python3_12),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python_targets_python3_10,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,run,no,dev-lang,python,none,[,,],[slot(3.10)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python_targets_python3_11,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,run,no,dev-lang,python,none,[,,],[slot(3.11)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python_targets_python3_12,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,run,no,dev-lang,python,none,[,,],[slot(3.12)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,snappy,portage://app-forensics/volatility3-2.7.0,[any_of_group([package_dependency(portage://app-forensics/volatility3-2.7.0,run,no,app-arch,snappy,none,[,,],[slot(0),subslot(1.1)],[]),package_dependency(portage://app-forensics/volatility3-2.7.0,run,no,app-arch,snappy,none,[,,],[slot(0),subslot(1.2)],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,yara,portage://app-forensics/volatility3-2.7.0,[package_dependency(portage://app-forensics/volatility3-2.7.0,run,no,dev-python,yara-python,greaterequal,[3.8.0,,,3.8.0],[],[use(optenable(python_targets_python3_10),negative),use(optenable(python_targets_python3_11),negative),use(optenable(python_targets_python3_12),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-forensics/volatility3-2.7.0,run,no,dev-python,pefile,greaterequal,[2023.2.7,,,2023.2.7],[],[use(optenable(python_targets_python3_10),negative),use(optenable(python_targets_python3_11),negative),use(optenable(python_targets_python3_12),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
