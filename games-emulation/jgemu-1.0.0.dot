digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://games-emulation/jgemu-1.0.0", color=red, width=4, href="../games-emulation/jgemu-1.0.0.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,bsnes,portage://games-emulation/jgemu-1.0.0,[package_dependency(portage://games-emulation/jgemu-1.0.0,run,no,games-emulation,bsnes-jg,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,cega,portage://games-emulation/jgemu-1.0.0,[package_dependency(portage://games-emulation/jgemu-1.0.0,run,no,games-emulation,cega-jg,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gambatte,portage://games-emulation/jgemu-1.0.0,[package_dependency(portage://games-emulation/jgemu-1.0.0,run,no,games-emulation,gambatte-jg,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,geolith,portage://games-emulation/jgemu-1.0.0,[package_dependency(portage://games-emulation/jgemu-1.0.0,run,no,games-emulation,geolith-jg,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jollycv,portage://games-emulation/jgemu-1.0.0,[package_dependency(portage://games-emulation/jgemu-1.0.0,run,no,games-emulation,jollycv-jg,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mednafen,portage://games-emulation/jgemu-1.0.0,[package_dependency(portage://games-emulation/jgemu-1.0.0,run,no,games-emulation,mednafen-jg,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,melonds,portage://games-emulation/jgemu-1.0.0,[package_dependency(portage://games-emulation/jgemu-1.0.0,run,no,games-emulation,melonds-jg,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mgba,portage://games-emulation/jgemu-1.0.0,[package_dependency(portage://games-emulation/jgemu-1.0.0,run,no,games-emulation,mgba-jg,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nestopia,portage://games-emulation/jgemu-1.0.0,[package_dependency(portage://games-emulation/jgemu-1.0.0,run,no,games-emulation,nestopia-jg,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,prosystem,portage://games-emulation/jgemu-1.0.0,[package_dependency(portage://games-emulation/jgemu-1.0.0,run,no,games-emulation,prosystem-jg,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sameboy,portage://games-emulation/jgemu-1.0.0,[package_dependency(portage://games-emulation/jgemu-1.0.0,run,no,games-emulation,sameboy-jg,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,vecx,portage://games-emulation/jgemu-1.0.0,[package_dependency(portage://games-emulation/jgemu-1.0.0,run,no,games-emulation,vecx-jg,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
