digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://dev-ml/merlin-4.12-r1", color=red, width=4, href="../dev-ml/merlin-4.12-r1.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(any_of_group([package_dependency(portage://dev-ml/merlin-4.12-r1,install,no,dev-lang,ocaml,none,[,,],[slot(0),subslot(4.14)],[]),package_dependency(portage://dev-ml/merlin-4.12-r1,install,no,dev-lang,ocaml,none,[,,],[slot(0),subslot(4.14.1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,emacs,portage://dev-ml/merlin-4.12-r1,[package_dependency(portage://dev-ml/merlin-4.12-r1,install,no,app-editors,emacs,greaterequal,[23.1,,,23.1],any_different_slot,[]),package_dependency(portage://dev-ml/merlin-4.12-r1,install,no,app-emacs,auto-complete,none,[,,],[],[]),package_dependency(portage://dev-ml/merlin-4.12-r1,install,no,app-emacs,company-mode,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,install,no,dev-lang,ocaml,greaterequal,[4,,,4],any_same_slot,[use(optenable(ocamlopt),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,install,no,dev-lang,ocaml,none,[,,],any_same_slot,[use(optenable(ocamlopt),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,install,no,dev-ml,csexp,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,install,no,dev-ml,dune,greaterequal,[2.9,,,2.9],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,install,no,dev-ml,dune,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,install,no,dev-ml,menhir,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,install,no,dev-ml,yojson,greaterequal,[2.0.0,,,2.0.0],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(any_of_group([package_dependency(portage://dev-ml/merlin-4.12-r1,run,no,dev-lang,ocaml,none,[,,],[slot(0),subslot(4.14)],[]),package_dependency(portage://dev-ml/merlin-4.12-r1,run,no,dev-lang,ocaml,none,[,,],[slot(0),subslot(4.14.1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,emacs,portage://dev-ml/merlin-4.12-r1,[package_dependency(portage://dev-ml/merlin-4.12-r1,run,no,app-editors,emacs,greaterequal,[23.1,,,23.1],any_different_slot,[]),package_dependency(portage://dev-ml/merlin-4.12-r1,run,no,app-emacs,auto-complete,none,[,,],[],[]),package_dependency(portage://dev-ml/merlin-4.12-r1,run,no,app-emacs,company-mode,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,run,no,dev-lang,ocaml,greaterequal,[4,,,4],any_same_slot,[use(optenable(ocamlopt),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,run,no,dev-lang,ocaml,none,[,,],any_same_slot,[use(optenable(ocamlopt),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,run,no,dev-ml,csexp,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,run,no,dev-ml,dune,greaterequal,[2.9,,,2.9],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,run,no,dev-ml,dune,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,run,no,dev-ml,menhir,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-ml/merlin-4.12-r1,run,no,dev-ml,yojson,greaterequal,[2.0.0,,,2.0.0],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
