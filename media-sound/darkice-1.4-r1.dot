digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://media-sound/darkice-1.4-r1", color=red, width=4, href="../media-sound/darkice-1.4-r1.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,aac,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,install,no,media-libs,faac,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,alsa,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,install,no,media-libs,alsa-lib,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jack,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,install,no,virtual,jack,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,libsamplerate,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,install,no,media-libs,libsamplerate,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mp3,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,install,no,media-sound,lame,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,opus,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,install,no,media-libs,opus,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,pulseaudio,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,install,no,media-libs,libpulse,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,twolame,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,install,no,media-sound,twolame,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,vorbis,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,install,no,media-libs,libvorbis,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,aac,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,run,no,media-libs,faac,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,alsa,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,run,no,media-libs,alsa-lib,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jack,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,run,no,virtual,jack,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,libsamplerate,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,run,no,media-libs,libsamplerate,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mp3,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,run,no,media-sound,lame,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,opus,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,run,no,media-libs,opus,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,pulseaudio,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,run,no,media-libs,libpulse,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,twolame,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,run,no,media-sound,twolame,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,vorbis,portage://media-sound/darkice-1.4-r1,[package_dependency(portage://media-sound/darkice-1.4-r1,run,no,media-libs,libvorbis,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
