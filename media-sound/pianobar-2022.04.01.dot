digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
rank=same;
label=<<i>ebuild</i>>;
id [label="portage://media-sound/pianobar-2022.04.01", color=red, width=4, href="../media-sound/pianobar-2022.04.01.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://media-sound/pianobar-2022.04.01,install,no,dev-libs,json-c,none,[,,],any_same_slot,[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://media-sound/pianobar-2022.04.01,install,no,dev-libs,libgcrypt,none,[,,],any_same_slot,[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://media-sound/pianobar-2022.04.01,install,no,media-libs,libao,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

subgraph pack83167 {
dependency164605 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>media-video</TD></TR><TR><TD>ffmpeg</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>3.3</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency164605:w [weight=20,style="solid",arrowhead="vee"];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://media-sound/pianobar-2022.04.01,install,no,net-misc,curl,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://media-sound/pianobar-2022.04.01,run,no,dev-libs,json-c,none,[,,],any_same_slot,[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://media-sound/pianobar-2022.04.01,run,no,dev-libs,libgcrypt,none,[,,],any_same_slot,[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://media-sound/pianobar-2022.04.01,run,no,media-libs,libao,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

subgraph pack83168 {
dependency164606 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>media-video</TD></TR><TR><TD>ffmpeg</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>3.3</TD></TR></TABLE>>, shape=none, color=blue];
}
id:e -> dependency164606:w [weight=20,style="solid",arrowhead="odot"];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://media-sound/pianobar-2022.04.01,run,no,net-misc,curl,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

subgraph choice83167 {
color=black;
nodesep=1;
choice1091011001059745118105100101111471021021091121011034552465246524511457 [label="portage://media-video/ffmpeg-4.4.4-r9", color=red, width=4,href="../media-video/ffmpeg-4.4.4-r9.svg"];
choice10910110010597451181051001011114710210210911210110345544648451144950 [label="portage://media-video/ffmpeg-6.0-r12", color=red, width=4,href="../media-video/ffmpeg-6.0-r12.svg"];
choice1091011001059745118105100101111471021021091121011034554464846494511452 [label="portage://media-video/ffmpeg-6.0.1-r4", color=red, width=4,href="../media-video/ffmpeg-6.0.1-r4.svg"];
choice1091011001059745118105100101111471021021091121011034554464946494511453 [label="portage://media-video/ffmpeg-6.1.1-r5", color=red, width=4,href="../media-video/ffmpeg-6.1.1-r5.svg"];
choice1091011001059745118105100101111471021021091121011034554464946494511454 [label="portage://media-video/ffmpeg-6.1.1-r6", color=red, width=4,href="../media-video/ffmpeg-6.1.1-r6.svg"];
choice1091011001059745118105100101111471021021091121011034557575757 [label="portage://media-video/ffmpeg-9999", color=red, width=4,href="../media-video/ffmpeg-9999.svg"];
dependency164605:e -> choice1091011001059745118105100101111471021021091121011034552465246524511457:w [style=dotted,weight="100"];
dependency164605:e -> choice10910110010597451181051001011114710210210911210110345544648451144950:w [style=dotted,weight="100"];
dependency164605:e -> choice1091011001059745118105100101111471021021091121011034554464846494511452:w [style=dotted,weight="100"];
dependency164605:e -> choice1091011001059745118105100101111471021021091121011034554464946494511453:w [style=dotted,weight="100"];
dependency164605:e -> choice1091011001059745118105100101111471021021091121011034554464946494511454:w [style=dotted,weight="100"];
dependency164605:e -> choice1091011001059745118105100101111471021021091121011034557575757:w [style=dotted,weight="100"];
}
subgraph choice83168 {
color=black;
nodesep=1;
choice1091011001059745118105100101111471021021091121011034552465246524511457 [label="portage://media-video/ffmpeg-4.4.4-r9", color=red, width=4,href="../media-video/ffmpeg-4.4.4-r9.svg"];
choice10910110010597451181051001011114710210210911210110345544648451144950 [label="portage://media-video/ffmpeg-6.0-r12", color=red, width=4,href="../media-video/ffmpeg-6.0-r12.svg"];
choice1091011001059745118105100101111471021021091121011034554464846494511452 [label="portage://media-video/ffmpeg-6.0.1-r4", color=red, width=4,href="../media-video/ffmpeg-6.0.1-r4.svg"];
choice1091011001059745118105100101111471021021091121011034554464946494511453 [label="portage://media-video/ffmpeg-6.1.1-r5", color=red, width=4,href="../media-video/ffmpeg-6.1.1-r5.svg"];
choice1091011001059745118105100101111471021021091121011034554464946494511454 [label="portage://media-video/ffmpeg-6.1.1-r6", color=red, width=4,href="../media-video/ffmpeg-6.1.1-r6.svg"];
choice1091011001059745118105100101111471021021091121011034557575757 [label="portage://media-video/ffmpeg-9999", color=red, width=4,href="../media-video/ffmpeg-9999.svg"];
dependency164606:e -> choice1091011001059745118105100101111471021021091121011034552465246524511457:w [style=dotted,weight="100"];
dependency164606:e -> choice10910110010597451181051001011114710210210911210110345544648451144950:w [style=dotted,weight="100"];
dependency164606:e -> choice1091011001059745118105100101111471021021091121011034554464846494511452:w [style=dotted,weight="100"];
dependency164606:e -> choice1091011001059745118105100101111471021021091121011034554464946494511453:w [style=dotted,weight="100"];
dependency164606:e -> choice1091011001059745118105100101111471021021091121011034554464946494511454:w [style=dotted,weight="100"];
dependency164606:e -> choice1091011001059745118105100101111471021021091121011034557575757:w [style=dotted,weight="100"];
}
}

}
