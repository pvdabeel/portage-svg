digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://media-sound/split2flac-122", color=red, width=4, href="../media-sound/split2flac-122.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,enca,portage://media-sound/split2flac-122,[package_dependency(portage://media-sound/split2flac-122,run,no,app-i18n,enca,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,flake,portage://media-sound/split2flac-122,[package_dependency(portage://media-sound/split2flac-122,run,no,media-sound,flake,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,imagemagick,portage://media-sound/split2flac-122,[package_dependency(portage://media-sound/split2flac-122,run,no,media-gfx,imagemagick,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mp3,portage://media-sound/split2flac-122,[package_dependency(portage://media-sound/split2flac-122,run,no,media-sound,lame,none,[,,],[],[]),any_of_group([package_dependency(portage://media-sound/split2flac-122,run,no,media-libs,mutagen,none,[,,],[],[]),package_dependency(portage://media-sound/split2flac-122,run,no,media-libs,id3lib,none,[,,],[],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mp4,portage://media-sound/split2flac-122,[package_dependency(portage://media-sound/split2flac-122,run,no,media-libs,faac,none,[,,],[],[]),package_dependency(portage://media-sound/split2flac-122,run,no,media-libs,libmp4v2,none,[,,],[slot(0)],[use(enable(utils),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ogg,portage://media-sound/split2flac-122,[package_dependency(portage://media-sound/split2flac-122,run,no,media-sound,vorbis-tools,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,replaygain,portage://media-sound/split2flac-122,[use_conditional_group(positive,mp3,portage://media-sound/split2flac-122,[package_dependency(portage://media-sound/split2flac-122,run,no,media-sound,mp3gain,none,[,,],[],[])]),use_conditional_group(positive,ogg,portage://media-sound/split2flac-122,[package_dependency(portage://media-sound/split2flac-122,run,no,media-sound,vorbisgain,none,[,,],[],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,wavpack,portage://media-sound/split2flac-122,[package_dependency(portage://media-sound/split2flac-122,run,no,media-sound,wavpack,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-sound/split2flac-122,run,no,app-cdr,cuetools,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-sound/split2flac-122,run,no,media-libs,flac,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-sound/split2flac-122,run,no,media-sound,shntool,none,[,,],[],[use(optenable(mac),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-sound/split2flac-122,run,no,virtual,libiconv,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
