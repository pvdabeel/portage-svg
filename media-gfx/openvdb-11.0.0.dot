digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://media-gfx/openvdb-11.0.0", color=red, width=4, href="../media-gfx/openvdb-11.0.0.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(negative,ax,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-libs,log4cplus,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ax,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,sys-devel,llvm,smaller,[16,,,16],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,blosc,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-libs,c-blosc,none,[,,],any_same_slot,[]),package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,sys-libs,zlib,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nanovdb,portage://media-gfx/openvdb-11.0.0,[use_conditional_group(positive,zlib,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,sys-libs,zlib,none,[,,],any_same_slot,[])]),use_conditional_group(positive,cuda,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-util,nvidia-cuda-toolkit,greaterequal,[11,,,11],[],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python,portage://media-gfx/openvdb-11.0.0,[use_conditional_group(positive,python_single_target_python3_10,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-lang,python,none,[,,],[slot(3.10)],[])]),use_conditional_group(positive,python_single_target_python3_11,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-lang,python,none,[,,],[slot(3.11)],[])]),use_conditional_group(positive,python_single_target_python3_12,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-lang,python,none,[,,],[slot(3.12)],[])]),use_conditional_group(positive,python_single_target_python3_10,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-libs,boost,none,[,,],any_same_slot,[use(optenable(numpy),none),use(enable(python_targets_python3_10),negative)]),package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-python,pybind11,none,[,,],[],[use(enable(python_targets_python3_10),negative)]),use_conditional_group(positive,numpy,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-python,numpy,none,[,,],[],[use(enable(python_targets_python3_10),negative)])])]),use_conditional_group(positive,python_single_target_python3_11,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-libs,boost,none,[,,],any_same_slot,[use(optenable(numpy),none),use(enable(python_targets_python3_11),negative)]),package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-python,pybind11,none,[,,],[],[use(enable(python_targets_python3_11),negative)]),use_conditional_group(positive,numpy,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-python,numpy,none,[,,],[],[use(enable(python_targets_python3_11),negative)])])]),use_conditional_group(positive,python_single_target_python3_12,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-libs,boost,none,[,,],any_same_slot,[use(optenable(numpy),none),use(enable(python_targets_python3_12),negative)]),package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-python,pybind11,none,[,,],[],[use(enable(python_targets_python3_12),negative)]),use_conditional_group(positive,numpy,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-python,numpy,none,[,,],[],[use(enable(python_targets_python3_12),negative)])])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,utils,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,x11-libs,libXcursor,none,[,,],[],[]),package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,x11-libs,libXi,none,[,,],[],[]),package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,x11-libs,libXinerama,none,[,,],[],[]),package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,x11-libs,libXrandr,none,[,,],[],[]),package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,media-libs,glfw,none,[,,],[],[]),package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,media-libs,glu,none,[,,],[],[]),use_conditional_group(positive,alembic,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,media-gfx,alembic,none,[,,],[],[])]),use_conditional_group(positive,jpeg,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,media-libs,libjpeg-turbo,none,[,,],any_same_slot,[])]),use_conditional_group(positive,png,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,media-libs,libpng,none,[,,],any_same_slot,[])]),use_conditional_group(positive,openexr,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,media-libs,openexr,greaterequal,[3,,,3],any_same_slot,[])]),package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,media-libs,libglvnd,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-cpp,tbb,greaterequal,[2020.3,,,2020.3],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-libs,boost,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-libs,imath,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/openvdb-11.0.0,install,no,dev-libs,jemalloc,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/openvdb-11.0.0,install,strong,sys-devel,llvm,none,[,,],[slot(0)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(negative,ax,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-libs,log4cplus,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ax,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,sys-devel,llvm,smaller,[16,,,16],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,blosc,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-libs,c-blosc,none,[,,],any_same_slot,[]),package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,sys-libs,zlib,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nanovdb,portage://media-gfx/openvdb-11.0.0,[use_conditional_group(positive,zlib,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,sys-libs,zlib,none,[,,],any_same_slot,[])]),use_conditional_group(positive,cuda,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-util,nvidia-cuda-toolkit,greaterequal,[11,,,11],[],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python,portage://media-gfx/openvdb-11.0.0,[use_conditional_group(positive,python_single_target_python3_10,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-lang,python,none,[,,],[slot(3.10)],[])]),use_conditional_group(positive,python_single_target_python3_11,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-lang,python,none,[,,],[slot(3.11)],[])]),use_conditional_group(positive,python_single_target_python3_12,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-lang,python,none,[,,],[slot(3.12)],[])]),use_conditional_group(positive,python_single_target_python3_10,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-libs,boost,none,[,,],any_same_slot,[use(optenable(numpy),none),use(enable(python_targets_python3_10),negative)]),package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-python,pybind11,none,[,,],[],[use(enable(python_targets_python3_10),negative)]),use_conditional_group(positive,numpy,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-python,numpy,none,[,,],[],[use(enable(python_targets_python3_10),negative)])])]),use_conditional_group(positive,python_single_target_python3_11,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-libs,boost,none,[,,],any_same_slot,[use(optenable(numpy),none),use(enable(python_targets_python3_11),negative)]),package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-python,pybind11,none,[,,],[],[use(enable(python_targets_python3_11),negative)]),use_conditional_group(positive,numpy,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-python,numpy,none,[,,],[],[use(enable(python_targets_python3_11),negative)])])]),use_conditional_group(positive,python_single_target_python3_12,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-libs,boost,none,[,,],any_same_slot,[use(optenable(numpy),none),use(enable(python_targets_python3_12),negative)]),package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-python,pybind11,none,[,,],[],[use(enable(python_targets_python3_12),negative)]),use_conditional_group(positive,numpy,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-python,numpy,none,[,,],[],[use(enable(python_targets_python3_12),negative)])])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,utils,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,x11-libs,libXcursor,none,[,,],[],[]),package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,x11-libs,libXi,none,[,,],[],[]),package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,x11-libs,libXinerama,none,[,,],[],[]),package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,x11-libs,libXrandr,none,[,,],[],[]),package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,media-libs,glfw,none,[,,],[],[]),package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,media-libs,glu,none,[,,],[],[]),use_conditional_group(positive,alembic,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,media-gfx,alembic,none,[,,],[],[])]),use_conditional_group(positive,jpeg,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,media-libs,libjpeg-turbo,none,[,,],any_same_slot,[])]),use_conditional_group(positive,png,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,media-libs,libpng,none,[,,],any_same_slot,[])]),use_conditional_group(positive,openexr,portage://media-gfx/openvdb-11.0.0,[package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,media-libs,openexr,greaterequal,[3,,,3],any_same_slot,[])]),package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,media-libs,libglvnd,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-cpp,tbb,greaterequal,[2020.3,,,2020.3],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-libs,boost,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-libs,imath,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/openvdb-11.0.0,run,no,dev-libs,jemalloc,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
