digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6", color=red, width=4, href="../media-gfx/nvidia-cg-toolkit-3.1.0013-r6.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,amd64,portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6,[use_conditional_group(positive,abi_x86_32,portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6,[package_dependency(portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6,run,no,media-libs,freeglut,greaterequal,[2.8.1,,,2.8.1],[],[use(enable(abi_x86_32),negative)])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6,run,no,media-libs,glu,greaterequal,[9.0.0,,-r1,9.0.0-r1],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6,run,no,virtual,opengl,greaterequal,[7.0,,-r1,7.0-r1],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6,run,no,x11-libs,libICE,greaterequal,[1.0.8,,-r1,1.0.8-r1],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6,run,no,x11-libs,libSM,greaterequal,[1.2.1,,-r1,1.2.1-r1],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6,run,no,x11-libs,libX11,greaterequal,[1.6.2,,,1.6.2],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6,run,no,x11-libs,libXext,greaterequal,[1.3.2,,,1.3.2],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6,run,no,x11-libs,libXi,greaterequal,[1.7.2,,,1.7.2],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6,run,no,x11-libs,libXmu,greaterequal,[1.1.1,,-r1,1.1.1-r1],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-gfx/nvidia-cg-toolkit-3.1.0013-r6,run,no,x11-libs,libXt,greaterequal,[1.1.4,,,1.1.4],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
