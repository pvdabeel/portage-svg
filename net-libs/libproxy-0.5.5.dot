digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://net-libs/libproxy-0.5.5", color=red, width=4, href="../net-libs/libproxy-0.5.5.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,duktape,portage://net-libs/libproxy-0.5.5,[package_dependency(portage://net-libs/libproxy-0.5.5,install,no,dev-lang,duktape,none,[,,],any_same_slot,[]),package_dependency(portage://net-libs/libproxy-0.5.5,install,no,net-misc,curl,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gnome,portage://net-libs/libproxy-0.5.5,[package_dependency(portage://net-libs/libproxy-0.5.5,install,no,gnome-base,gsettings-desktop-schemas,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,introspection,portage://net-libs/libproxy-0.5.5,[package_dependency(portage://net-libs/libproxy-0.5.5,install,no,dev-libs,gobject-introspection,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-libs/libproxy-0.5.5,install,no,dev-libs,glib,greaterequal,[2.71.3,,,2.71.3],[slot(2)],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,duktape,portage://net-libs/libproxy-0.5.5,[package_dependency(portage://net-libs/libproxy-0.5.5,run,no,dev-lang,duktape,none,[,,],any_same_slot,[]),package_dependency(portage://net-libs/libproxy-0.5.5,run,no,net-misc,curl,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gnome,portage://net-libs/libproxy-0.5.5,[package_dependency(portage://net-libs/libproxy-0.5.5,run,no,gnome-base,gsettings-desktop-schemas,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,introspection,portage://net-libs/libproxy-0.5.5,[package_dependency(portage://net-libs/libproxy-0.5.5,run,no,dev-libs,gobject-introspection,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-libs/libproxy-0.5.5,run,no,dev-libs,glib,greaterequal,[2.71.3,,,2.71.3],[slot(2)],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
