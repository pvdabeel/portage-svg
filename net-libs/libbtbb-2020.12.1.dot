digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
rank=same;
label=<<i>ebuild</i>>;
id [label="portage://net-libs/libbtbb-2020.12.1", color=red, width=4, href="../net-libs/libbtbb-2020.12.1.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
subgraph cond46 {
dependency113 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>wireshark-plugins</TD></TR></TABLE>>, shape=none, color=red];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# dependency113 -> package_dependency(portage://net-libs/libbtbb-2020.12.1,install,no,dev-libs,glib,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# dependency113 -> package_dependency(portage://net-libs/libbtbb-2020.12.1,install,no,virtual,pkgconfig,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
id:e -> dependency113:w [weight=20,style="solid",arrowhead="vee"];
subgraph cond47 {
dependency114 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>wireshark-plugins</TD></TR></TABLE>>, shape=none, color=red];
subgraph pack65 {
dependency115 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>net-analyzer</TD></TR><TR><TD>wireshark</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>1.8.3-r1</TD></TR></TABLE>>, shape=none, color=blue];
}
dependency114:e -> dependency115:w [weight=20,style="dashed",arrowhead="vee"];
}
id:e -> dependency114:w [weight=20,style="solid",arrowhead="vee"];
}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
subgraph cond48 {
dependency116 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>wireshark-plugins</TD></TR></TABLE>>, shape=none, color=red];
subgraph pack66 {
dependency117 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>net-analyzer</TD></TR><TR><TD>wireshark</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>1.8.3-r1</TD></TR></TABLE>>, shape=none, color=blue];
}
dependency116:e -> dependency117:w [weight=20,style="dashed",arrowhead="vee"];
}
id:e -> dependency116:w [weight=20,style="solid",arrowhead="odot"];
}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

subgraph choice65 {
color=black;
nodesep=1;
choice1101011164597110971081211221011144711910511410111510497114107455146524651 [label="portage://net-analyzer/wireshark-3.4.3", color=red, width=4,href="../net-analyzer/wireshark-3.4.3.svg"];
choice1101011164597110971081211221011144711910511410111510497114107455146524652 [label="portage://net-analyzer/wireshark-3.4.4", color=red, width=4,href="../net-analyzer/wireshark-3.4.4.svg"];
choice11010111645971109710812112210111447119105114101115104971141074557575757 [label="portage://net-analyzer/wireshark-9999", color=red, width=4,href="../net-analyzer/wireshark-9999.svg"];
dependency115:e -> choice1101011164597110971081211221011144711910511410111510497114107455146524651:w [style=dotted,weight="100"];
dependency115:e -> choice1101011164597110971081211221011144711910511410111510497114107455146524652:w [style=dotted,weight="100"];
dependency115:e -> choice11010111645971109710812112210111447119105114101115104971141074557575757:w [style=dotted,weight="100"];
}
subgraph choice66 {
color=black;
nodesep=1;
choice1101011164597110971081211221011144711910511410111510497114107455146524651 [label="portage://net-analyzer/wireshark-3.4.3", color=red, width=4,href="../net-analyzer/wireshark-3.4.3.svg"];
choice1101011164597110971081211221011144711910511410111510497114107455146524652 [label="portage://net-analyzer/wireshark-3.4.4", color=red, width=4,href="../net-analyzer/wireshark-3.4.4.svg"];
choice11010111645971109710812112210111447119105114101115104971141074557575757 [label="portage://net-analyzer/wireshark-9999", color=red, width=4,href="../net-analyzer/wireshark-9999.svg"];
dependency117:e -> choice1101011164597110971081211221011144711910511410111510497114107455146524651:w [style=dotted,weight="100"];
dependency117:e -> choice1101011164597110971081211221011144711910511410111510497114107455146524652:w [style=dotted,weight="100"];
dependency117:e -> choice11010111645971109710812112210111447119105114101115104971141074557575757:w [style=dotted,weight="100"];
}
}

}
