digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://sys-power/nut-2.8.2", color=red, width=4, href="../sys-power/nut-2.8.2.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,cgi,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,media-libs,gd,greaterequal,[2,,,2],[],[use(enable(png),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gpio,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,dev-libs,libgpiod,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,i2c,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,sys-apps,i2c-tools,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ipmi,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,sys-libs,freeipmi,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,modbus,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,dev-libs,libmodbus,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python,portage://sys-power/nut-2.8.2,[use_conditional_group(positive,python_single_target_python3_10,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,dev-lang,python,none,[,,],[slot(3.10)],[])]),use_conditional_group(positive,python_single_target_python3_11,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,dev-lang,python,none,[,,],[slot(3.11)],[])]),use_conditional_group(positive,python_single_target_python3_12,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,dev-lang,python,none,[,,],[slot(3.12)],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,snmp,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,net-analyzer,net-snmp,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ssl,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,dev-libs,openssl,greaterequal,[1,,,1],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,systemd,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,sys-apps,systemd,greaterequal,[253,,,253],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,tcpd,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,sys-apps,tcp-wrappers,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,usb,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,virtual,libusb,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xml,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,net-libs,neon,greaterequal,[0.25.0,,,0.25.0],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,zeroconf,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,install,no,net-dns,avahi,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://sys-power/nut-2.8.2,install,no,acct-group,nut,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://sys-power/nut-2.8.2,install,no,acct-user,nut,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://sys-power/nut-2.8.2,install,no,dev-libs,libltdl,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://sys-power/nut-2.8.2,install,no,virtual,udev,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,cgi,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,media-libs,gd,greaterequal,[2,,,2],[],[use(enable(png),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gpio,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,dev-libs,libgpiod,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,i2c,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,sys-apps,i2c-tools,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ipmi,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,sys-libs,freeipmi,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,modbus,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,dev-libs,libmodbus,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,monitor,portage://sys-power/nut-2.8.2,[use_conditional_group(positive,python_single_target_python3_10,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,dev-python,PyQt5,none,[,,],[],[use(enable(gui),none),use(enable(widgets),none),use(enable(python_targets_python3_10),negative)])]),use_conditional_group(positive,python_single_target_python3_11,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,dev-python,PyQt5,none,[,,],[],[use(enable(gui),none),use(enable(widgets),none),use(enable(python_targets_python3_11),negative)])]),use_conditional_group(positive,python_single_target_python3_12,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,dev-python,PyQt5,none,[,,],[],[use(enable(gui),none),use(enable(widgets),none),use(enable(python_targets_python3_12),negative)])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python,portage://sys-power/nut-2.8.2,[use_conditional_group(positive,python_single_target_python3_10,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,dev-lang,python,none,[,,],[slot(3.10)],[])]),use_conditional_group(positive,python_single_target_python3_11,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,dev-lang,python,none,[,,],[slot(3.11)],[])]),use_conditional_group(positive,python_single_target_python3_12,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,dev-lang,python,none,[,,],[slot(3.12)],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,selinux,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,sec-policy,selinux-nut,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,snmp,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,net-analyzer,net-snmp,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ssl,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,dev-libs,openssl,greaterequal,[1,,,1],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,systemd,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,sys-apps,systemd,greaterequal,[253,,,253],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,tcpd,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,sys-apps,tcp-wrappers,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,usb,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,virtual,libusb,none,[,,],[slot(1)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xml,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,net-libs,neon,greaterequal,[0.25.0,,,0.25.0],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,zeroconf,portage://sys-power/nut-2.8.2,[package_dependency(portage://sys-power/nut-2.8.2,run,no,net-dns,avahi,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://sys-power/nut-2.8.2,run,no,acct-group,nut,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://sys-power/nut-2.8.2,run,no,acct-user,nut,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://sys-power/nut-2.8.2,run,no,dev-libs,libltdl,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://sys-power/nut-2.8.2,run,no,virtual,tmpfiles,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://sys-power/nut-2.8.2,run,no,virtual,udev,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
