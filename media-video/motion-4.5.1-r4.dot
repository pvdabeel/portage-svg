digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://media-video/motion-4.5.1-r4", color=red, width=4, href="../media-video/motion-4.5.1-r4.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ffmpeg,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,install,no,media-video,ffmpeg,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mariadb,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,install,no,dev-db,mariadb-connector-c,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mysql,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,install,no,dev-db,mysql-connector-c,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,postgres,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,install,no,dev-db,postgresql,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sqlite,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,install,no,dev-db,sqlite,none,[,,],[slot(3)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,v4l,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,install,no,media-libs,libv4l,none,[,,],[],[]),package_dependency(portage://media-video/motion-4.5.1-r4,install,no,virtual,os-headers,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,webp,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,install,no,media-libs,libwebp,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/motion-4.5.1-r4,install,no,acct-group,motion,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/motion-4.5.1-r4,install,no,acct-user,motion,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/motion-4.5.1-r4,install,no,media-libs,libjpeg-turbo,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/motion-4.5.1-r4,install,no,net-libs,libmicrohttpd,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/motion-4.5.1-r4,install,no,sys-devel,gettext,greaterequal,[0.19,,,0.19],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ffmpeg,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,run,no,media-video,ffmpeg,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mariadb,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,run,no,dev-db,mariadb-connector-c,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mysql,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,run,no,dev-db,mysql-connector-c,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,postgres,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,run,no,dev-db,postgresql,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sqlite,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,run,no,dev-db,sqlite,none,[,,],[slot(3)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,webp,portage://media-video/motion-4.5.1-r4,[package_dependency(portage://media-video/motion-4.5.1-r4,run,no,media-libs,libwebp,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/motion-4.5.1-r4,run,no,acct-group,motion,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/motion-4.5.1-r4,run,no,acct-user,motion,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/motion-4.5.1-r4,run,no,media-libs,libjpeg-turbo,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/motion-4.5.1-r4,run,no,net-libs,libmicrohttpd,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/motion-4.5.1-r4,run,no,sys-devel,gettext,greaterequal,[0.19,,,0.19],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
