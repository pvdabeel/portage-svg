digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://media-video/webcamoid-9999", color=red, width=4, href="../media-video/webcamoid-9999.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ffmpeg,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,install,no,media-video,ffmpeg,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gstreamer,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,install,no,media-libs,gstreamer,greaterequal,[1.6.0,,,1.6.0],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jack,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,install,no,virtual,jack,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,libuvc,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,install,no,media-libs,libuvc,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,pulseaudio,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,install,no,media-libs,libpulse,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,qtaudio,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,install,no,dev-qt,qtmultimedia,none,[,,],[slot(6)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,qtcamera,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,install,no,dev-qt,qtmultimedia,none,[,,],[slot(6)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sdl,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,install,no,media-libs,libsdl2,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,v4l,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,install,no,media-libs,libv4l,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/webcamoid-9999,install,no,dev-qt,qtbase,none,[,,],[slot(6)],[use(enable(concurrent),none),use(enable(dbus),none),use(enable(gui),none),use(enable(network),none),use(enable(opengl),none),use(enable(widgets),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/webcamoid-9999,install,no,dev-qt,qtdeclarative,none,[,,],[slot(6)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/webcamoid-9999,install,no,dev-qt,qtsvg,none,[,,],[slot(6)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/webcamoid-9999,install,no,sys-kernel,linux-headers,greaterequal,[3.6,,,3.6],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ffmpeg,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,run,no,media-video,ffmpeg,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gstreamer,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,run,no,media-libs,gstreamer,greaterequal,[1.6.0,,,1.6.0],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jack,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,run,no,virtual,jack,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,libuvc,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,run,no,media-libs,libuvc,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,pulseaudio,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,run,no,media-libs,libpulse,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,qtaudio,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,run,no,dev-qt,qtmultimedia,none,[,,],[slot(6)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,qtcamera,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,run,no,dev-qt,qtmultimedia,none,[,,],[slot(6)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sdl,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,run,no,media-libs,libsdl2,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,v4l,portage://media-video/webcamoid-9999,[package_dependency(portage://media-video/webcamoid-9999,run,no,media-libs,libv4l,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/webcamoid-9999,run,no,dev-qt,qtbase,none,[,,],[slot(6)],[use(enable(concurrent),none),use(enable(dbus),none),use(enable(gui),none),use(enable(network),none),use(enable(opengl),none),use(enable(widgets),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/webcamoid-9999,run,no,dev-qt,qtdeclarative,none,[,,],[slot(6)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/webcamoid-9999,run,no,dev-qt,qtsvg,none,[,,],[slot(6)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/webcamoid-9999,run,no,virtual,opengl,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
