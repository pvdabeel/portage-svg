digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://media-video/gpac-2.0.0", color=red, width=4, href="../media-video/gpac-2.0.0.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,X,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,x11-libs,libXt,none,[,,],[],[]),package_dependency(portage://media-video/gpac-2.0.0,install,no,x11-libs,libX11,none,[,,],[],[]),package_dependency(portage://media-video/gpac-2.0.0,install,no,x11-libs,libXv,none,[,,],[],[]),package_dependency(portage://media-video/gpac-2.0.0,install,no,x11-libs,libXext,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,a52,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,a52dec,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,aac,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,faad2,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,alsa,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,alsa-lib,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dvb,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,sys-kernel,linux-headers,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ffmpeg,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-video,ffmpeg,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jack,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,virtual,jack,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jpeg,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,virtual,jpeg,none,[,,],[slot(0)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jpeg2k,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,openjpeg,none,[,,],[slot(2)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mad,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,libmad,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,opengl,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,freeglut,none,[,,],[],[]),package_dependency(portage://media-video/gpac-2.0.0,install,no,virtual,glu,none,[,,],[],[]),package_dependency(portage://media-video/gpac-2.0.0,install,no,virtual,opengl,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,png,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,libpng,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,pulseaudio,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-sound,pulseaudio,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sdl,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,libsdl,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ssl,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,dev-libs,openssl,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,theora,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,libtheora,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,truetype,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,freetype,none,[,,],[slot(2)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,vorbis,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,libvorbis,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xml,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,dev-libs,libxml2,none,[,,],[slot(2),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xvid,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,xvid,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/gpac-2.0.0,install,no,dev-util,desktop-file-utils,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/gpac-2.0.0,install,no,media-libs,libogg,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/gpac-2.0.0,install,no,sys-libs,zlib,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/gpac-2.0.0,install,no,x11-misc,shared-mime-info,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,X,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,x11-libs,libXt,none,[,,],[],[]),package_dependency(portage://media-video/gpac-2.0.0,run,no,x11-libs,libX11,none,[,,],[],[]),package_dependency(portage://media-video/gpac-2.0.0,run,no,x11-libs,libXv,none,[,,],[],[]),package_dependency(portage://media-video/gpac-2.0.0,run,no,x11-libs,libXext,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,a52,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,a52dec,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,aac,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,faad2,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,alsa,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,alsa-lib,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ffmpeg,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-video,ffmpeg,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jack,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,virtual,jack,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jpeg,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,virtual,jpeg,none,[,,],[slot(0)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jpeg2k,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,openjpeg,none,[,,],[slot(2)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mad,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,libmad,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,opengl,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,freeglut,none,[,,],[],[]),package_dependency(portage://media-video/gpac-2.0.0,run,no,virtual,glu,none,[,,],[],[]),package_dependency(portage://media-video/gpac-2.0.0,run,no,virtual,opengl,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,png,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,libpng,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,pulseaudio,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-sound,pulseaudio,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sdl,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,libsdl,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ssl,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,dev-libs,openssl,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,theora,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,libtheora,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,truetype,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,freetype,none,[,,],[slot(2)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,vorbis,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,libvorbis,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xml,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,dev-libs,libxml2,none,[,,],[slot(2),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xvid,portage://media-video/gpac-2.0.0,[package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,xvid,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/gpac-2.0.0,run,no,media-libs,libogg,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://media-video/gpac-2.0.0,run,no,sys-libs,zlib,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
