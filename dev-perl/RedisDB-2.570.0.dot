digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://dev-perl/RedisDB-2.570.0", color=red, width=4, href="../dev-perl/RedisDB-2.570.0.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,test,portage://dev-perl/RedisDB-2.570.0,[use_conditional_group(negative,minimal,portage://dev-perl/RedisDB-2.570.0,[package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,dev-db,redis,none,[,,],[],[])]),package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,dev-perl,Test-Differences,greaterequal,[0.610.0,,,0.610.0],[],[]),package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,dev-perl,Test-FailWarnings,none,[,,],[],[]),package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,dev-perl,Test-Most,greaterequal,[0.220.0,,,0.220.0],[],[]),package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,virtual,perl-Test-Simple,greaterequal,[0.960.0,,,0.960.0],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,dev-lang,perl,greaterequal,[5.38.2,,-r3,5.38.2-r3],[],[use(equal(perl_features_debug),none),use(equal(perl_features_ithreads),none),use(equal(perl_features_quadmath),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,dev-perl,RedisDB-Parser,greaterequal,[2.210.0,,,2.210.0],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,dev-perl,Test-TCP,greaterequal,[1.170.0,,,1.170.0],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,dev-perl,Try-Tiny,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,dev-perl,URI,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,dev-perl,URI-redis,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,virtual,perl-Digest-SHA,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,virtual,perl-Encode,greaterequal,[2.100.0,,,2.100.0],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,virtual,perl-ExtUtils-MakeMaker,greaterequal,[6.300.200,,,6.300.200],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,install,no,virtual,perl-IO-Socket-IP,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,run,no,dev-lang,perl,greaterequal,[5.38.2,,-r3,5.38.2-r3],[],[use(equal(perl_features_debug),none),use(equal(perl_features_ithreads),none),use(equal(perl_features_quadmath),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,run,no,dev-lang,perl,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,run,no,dev-perl,RedisDB-Parser,greaterequal,[2.210.0,,,2.210.0],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,run,no,dev-perl,Test-TCP,greaterequal,[1.170.0,,,1.170.0],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,run,no,dev-perl,Try-Tiny,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,run,no,dev-perl,URI,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,run,no,dev-perl,URI-redis,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,run,no,virtual,perl-Encode,greaterequal,[2.100.0,,,2.100.0],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-perl/RedisDB-2.570.0,run,no,virtual,perl-IO-Socket-IP,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
