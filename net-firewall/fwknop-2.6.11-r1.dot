digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://net-firewall/fwknop-2.6.11-r1", color=red, width=4, href="../net-firewall/fwknop-2.6.11-r1.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,client,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,install,no,net-misc,wget,none,[,,],[],[use(enable(ssl),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,firewalld,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,install,no,net-firewall,firewalld,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gdbm,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,install,no,sys-libs,gdbm,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gpg,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,install,no,app-crypt,gpgme,none,[,,],any_same_slot,[]),package_dependency(portage://net-firewall/fwknop-2.6.11-r1,install,no,dev-libs,libassuan,none,[,,],any_same_slot,[]),package_dependency(portage://net-firewall/fwknop-2.6.11-r1,install,no,dev-libs,libgpg-error,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,iptables,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,install,no,net-firewall,iptables,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nfqueue,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,install,no,net-libs,libnetfilter_queue,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,server,portage://net-firewall/fwknop-2.6.11-r1,[use_conditional_group(negative,nfqueue,portage://net-firewall/fwknop-2.6.11-r1,[use_conditional_group(negative,udp-server,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,install,no,net-libs,libpcap,none,[,,],[],[])])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,verify-sig,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,install,no,sec-keys,openpgp-keys-fwknop,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,client,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,run,no,net-misc,wget,none,[,,],[],[use(enable(ssl),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,firewalld,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,run,no,net-firewall,firewalld,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gdbm,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,run,no,sys-libs,gdbm,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gpg,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,run,no,app-crypt,gpgme,none,[,,],any_same_slot,[]),package_dependency(portage://net-firewall/fwknop-2.6.11-r1,run,no,dev-libs,libassuan,none,[,,],any_same_slot,[]),package_dependency(portage://net-firewall/fwknop-2.6.11-r1,run,no,dev-libs,libgpg-error,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,iptables,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,run,no,net-firewall,iptables,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nfqueue,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,run,no,net-libs,libnetfilter_queue,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,server,portage://net-firewall/fwknop-2.6.11-r1,[use_conditional_group(negative,nfqueue,portage://net-firewall/fwknop-2.6.11-r1,[use_conditional_group(negative,udp-server,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,run,no,net-libs,libpcap,none,[,,],[],[])])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,verify-sig,portage://net-firewall/fwknop-2.6.11-r1,[package_dependency(portage://net-firewall/fwknop-2.6.11-r1,run,no,sec-keys,openpgp-keys-fwknop,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-firewall/fwknop-2.6.11-r1,run,no,virtual,tmpfiles,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
