digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://net-firewall/iptables-1.8.10-r1", color=red, width=4, href="../net-firewall/iptables-1.8.10-r1.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,conntrack,portage://net-firewall/iptables-1.8.10-r1,[package_dependency(portage://net-firewall/iptables-1.8.10-r1,install,no,net-libs,libnetfilter_conntrack,greaterequal,[1.0.6,,,1.0.6],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,netlink,portage://net-firewall/iptables-1.8.10-r1,[package_dependency(portage://net-firewall/iptables-1.8.10-r1,install,no,net-libs,libnfnetlink,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nftables,portage://net-firewall/iptables-1.8.10-r1,[package_dependency(portage://net-firewall/iptables-1.8.10-r1,install,no,net-libs,libmnl,greaterequal,[1.0,,,1.0],any_same_slot,[]),package_dependency(portage://net-firewall/iptables-1.8.10-r1,install,no,net-libs,libnftnl,greaterequal,[1.2.6,,,1.2.6],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,pcap,portage://net-firewall/iptables-1.8.10-r1,[package_dependency(portage://net-firewall/iptables-1.8.10-r1,install,no,net-libs,libpcap,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-firewall/iptables-1.8.10-r1,install,no,sys-kernel,linux-headers,greaterequal,[4.4,,,4.4],[slot(0)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-firewall/iptables-1.8.10-r1,install,no,virtual,os-headers,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,conntrack,portage://net-firewall/iptables-1.8.10-r1,[package_dependency(portage://net-firewall/iptables-1.8.10-r1,run,no,net-libs,libnetfilter_conntrack,greaterequal,[1.0.6,,,1.0.6],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,netlink,portage://net-firewall/iptables-1.8.10-r1,[package_dependency(portage://net-firewall/iptables-1.8.10-r1,run,no,net-libs,libnfnetlink,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nftables,portage://net-firewall/iptables-1.8.10-r1,[package_dependency(portage://net-firewall/iptables-1.8.10-r1,run,no,net-libs,libmnl,greaterequal,[1.0,,,1.0],any_same_slot,[]),package_dependency(portage://net-firewall/iptables-1.8.10-r1,run,no,net-libs,libnftnl,greaterequal,[1.2.6,,,1.2.6],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nftables,portage://net-firewall/iptables-1.8.10-r1,[package_dependency(portage://net-firewall/iptables-1.8.10-r1,run,no,net-misc,ethertypes,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,pcap,portage://net-firewall/iptables-1.8.10-r1,[package_dependency(portage://net-firewall/iptables-1.8.10-r1,run,no,net-libs,libpcap,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-firewall/iptables-1.8.10-r1,run,weak,net-firewall,arptables,smaller,[0.0.5,,-r1,0.0.5-r1],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-firewall/iptables-1.8.10-r1,run,weak,net-firewall,ebtables,smaller,[2.0.11,,-r1,2.0.11-r1],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
