digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://www-client/surf-2.1-r3", color=red, width=4, href="../www-client/surf-2.1-r3.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://www-client/surf-2.1-r3,install,no,app-crypt,gcr,none,[,,],[slot(0),equal],[use(enable(gtk),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://www-client/surf-2.1-r3,install,no,dev-libs,glib,none,[,,],[slot(2)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://www-client/surf-2.1-r3,install,no,net-libs,webkit-gtk,none,[,,],[slot(4.1),equal],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://www-client/surf-2.1-r3,install,no,x11-libs,gtk+,none,[,,],[slot(3)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://www-client/surf-2.1-r3,install,no,x11-libs,libX11,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(negative,savedconfig,portage://www-client/surf-2.1-r3,[package_dependency(portage://www-client/surf-2.1-r3,run,no,net-misc,curl,none,[,,],[],[]),package_dependency(portage://www-client/surf-2.1-r3,run,no,x11-apps,xprop,none,[,,],[],[]),package_dependency(portage://www-client/surf-2.1-r3,run,no,x11-misc,dmenu,none,[,,],[],[]),package_dependency(portage://www-client/surf-2.1-r3,run,no,x11-terms,st,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,tabbed,portage://www-client/surf-2.1-r3,[package_dependency(portage://www-client/surf-2.1-r3,run,no,x11-misc,tabbed,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://www-client/surf-2.1-r3,run,no,app-crypt,gcr,none,[,,],[slot(0),equal],[use(enable(gtk),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://www-client/surf-2.1-r3,run,no,dev-libs,glib,none,[,,],[slot(2)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://www-client/surf-2.1-r3,run,no,net-libs,webkit-gtk,none,[,,],[slot(4.1),equal],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://www-client/surf-2.1-r3,run,no,x11-libs,gtk+,none,[,,],[slot(3)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://www-client/surf-2.1-r3,run,no,x11-libs,libX11,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://www-client/surf-2.1-r3,run,weak,sci-chemistry,surf,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
