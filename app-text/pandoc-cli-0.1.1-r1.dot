digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://app-text/pandoc-cli-0.1.1-r1", color=red, width=4, href="../app-text/pandoc-cli-0.1.1-r1.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lua,portage://app-text/pandoc-cli-0.1.1-r1,[package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,hslua-cli,greaterequal,[1.4.1,,,1.4.1],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,hslua-cli,smaller,[1.5,,,1.5],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,pandoc-lua-engine,greaterequal,[0.2,,,0.2],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,pandoc-lua-engine,smaller,[0.3,,,0.3],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,temporary,greaterequal,[1.1,,,1.1],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,temporary,smaller,[1.4,,,1.4],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,server,portage://app-text/pandoc-cli-0.1.1-r1,[package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,pandoc-server,greaterequal,[0.1,,,0.1],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,pandoc-server,smaller,[0.2,,,0.2],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,safe,none,[,,],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,wai-extra,greaterequal,[3.0.24,,,3.0.24],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,warp,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,cabal,greaterequal,[3.0.0.0,,,3.0.0.0],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,pandoc,greaterequal,[3.0,,,3.0],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-haskell,text,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,no,dev-lang,ghc,greaterequal,[8.8.1,,,8.8.1],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,install,weak,app-text,pandoc,smaller,[3,,,3],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lua,portage://app-text/pandoc-cli-0.1.1-r1,[package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,hslua-cli,greaterequal,[1.4.1,,,1.4.1],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,hslua-cli,smaller,[1.5,,,1.5],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,pandoc-lua-engine,greaterequal,[0.2,,,0.2],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,pandoc-lua-engine,smaller,[0.3,,,0.3],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,temporary,greaterequal,[1.1,,,1.1],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,temporary,smaller,[1.4,,,1.4],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,server,portage://app-text/pandoc-cli-0.1.1-r1,[package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,pandoc-server,greaterequal,[0.1,,,0.1],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,pandoc-server,smaller,[0.2,,,0.2],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,safe,none,[,,],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,wai-extra,greaterequal,[3.0.24,,,3.0.24],any_same_slot,[]),package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,warp,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,pandoc,greaterequal,[3.0,,,3.0],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-haskell,text,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,no,dev-lang,ghc,greaterequal,[8.8.1,,,8.8.1],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/pandoc-cli-0.1.1-r1,run,weak,app-text,pandoc,smaller,[3,,,3],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
