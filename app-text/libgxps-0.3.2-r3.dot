digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://app-text/libgxps-0.3.2-r3", color=red, width=4, href="../app-text/libgxps-0.3.2-r3.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,introspection,portage://app-text/libgxps-0.3.2-r3,[package_dependency(portage://app-text/libgxps-0.3.2-r3,install,no,dev-libs,gobject-introspection,greaterequal,[1.54,,,1.54],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jpeg,portage://app-text/libgxps-0.3.2-r3,[package_dependency(portage://app-text/libgxps-0.3.2-r3,install,no,media-libs,libjpeg-turbo,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lcms,portage://app-text/libgxps-0.3.2-r3,[package_dependency(portage://app-text/libgxps-0.3.2-r3,install,no,media-libs,lcms,none,[,,],[slot(2)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,tiff,portage://app-text/libgxps-0.3.2-r3,[package_dependency(portage://app-text/libgxps-0.3.2-r3,install,no,media-libs,tiff,none,[,,],any_same_slot,[use(enable(zlib),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/libgxps-0.3.2-r3,install,no,app-arch,libarchive,greaterequal,[2.8,,,2.8],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/libgxps-0.3.2-r3,install,no,dev-libs,glib,greaterequal,[2.36,,,2.36],[slot(2)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/libgxps-0.3.2-r3,install,no,media-libs,freetype,none,[,,],[slot(2)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/libgxps-0.3.2-r3,install,no,media-libs,libpng,none,[,,],[slot(0)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/libgxps-0.3.2-r3,install,no,x11-libs,cairo,greaterequal,[1.10,,,1.10],[],[use(enable(svg),positive)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,introspection,portage://app-text/libgxps-0.3.2-r3,[package_dependency(portage://app-text/libgxps-0.3.2-r3,run,no,dev-libs,gobject-introspection,greaterequal,[1.54,,,1.54],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jpeg,portage://app-text/libgxps-0.3.2-r3,[package_dependency(portage://app-text/libgxps-0.3.2-r3,run,no,media-libs,libjpeg-turbo,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lcms,portage://app-text/libgxps-0.3.2-r3,[package_dependency(portage://app-text/libgxps-0.3.2-r3,run,no,media-libs,lcms,none,[,,],[slot(2)],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,tiff,portage://app-text/libgxps-0.3.2-r3,[package_dependency(portage://app-text/libgxps-0.3.2-r3,run,no,media-libs,tiff,none,[,,],any_same_slot,[use(enable(zlib),none)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/libgxps-0.3.2-r3,run,no,app-arch,libarchive,greaterequal,[2.8,,,2.8],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/libgxps-0.3.2-r3,run,no,dev-libs,glib,greaterequal,[2.36,,,2.36],[slot(2)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/libgxps-0.3.2-r3,run,no,media-libs,freetype,none,[,,],[slot(2)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/libgxps-0.3.2-r3,run,no,media-libs,libpng,none,[,,],[slot(0)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/libgxps-0.3.2-r3,run,no,x11-libs,cairo,greaterequal,[1.10,,,1.10],[],[use(enable(svg),positive)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
