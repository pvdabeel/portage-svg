digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://app-text/groonga-13.0.1", color=red, width=4, href="../app-text/groonga-13.0.1.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,benchmark,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,install,no,dev-libs,glib,greaterequal,[2.8,,,2.8],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jemalloc,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,install,no,dev-libs,jemalloc,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,libedit,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,install,no,dev-libs,libedit,greaterequal,[3,,,3],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,libevent,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,install,no,dev-libs,libevent,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lzo,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,install,no,dev-libs,lzo,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mecab,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,install,no,app-text,mecab,greaterequal,[0.80,,,0.80],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,msgpack,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,install,no,dev-libs,msgpack,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sphinx,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,install,no,dev-python,sphinx,greaterequal,[1.0.1,,,1.0.1],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,zeromq,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,install,no,net-libs,zeromq,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,zlib,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,install,no,sys-libs,zlib,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,zstd,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,install,no,app-arch,zstd,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/groonga-13.0.1,install,no,acct-group,groonga,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/groonga-13.0.1,install,no,acct-user,groonga,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/groonga-13.0.1,install,no,dev-libs,onigmo,greaterequal,[6.1.1,,,6.1.1],[slot(0),equal],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/groonga-13.0.1,install,no,dev-libs,rapidjson,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/groonga-13.0.1,install,no,dev-libs,xxhash,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,benchmark,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,run,no,dev-libs,glib,greaterequal,[2.8,,,2.8],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jemalloc,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,run,no,dev-libs,jemalloc,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,libedit,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,run,no,dev-libs,libedit,greaterequal,[3,,,3],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,libevent,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,run,no,dev-libs,libevent,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lzo,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,run,no,dev-libs,lzo,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,mecab,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,run,no,app-text,mecab,greaterequal,[0.80,,,0.80],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,msgpack,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,run,no,dev-libs,msgpack,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sphinx,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,run,no,dev-python,sphinx,greaterequal,[1.0.1,,,1.0.1],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,zeromq,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,run,no,net-libs,zeromq,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,zlib,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,run,no,sys-libs,zlib,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,zstd,portage://app-text/groonga-13.0.1,[package_dependency(portage://app-text/groonga-13.0.1,run,no,app-arch,zstd,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/groonga-13.0.1,run,no,acct-group,groonga,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/groonga-13.0.1,run,no,acct-user,groonga,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/groonga-13.0.1,run,no,dev-libs,onigmo,greaterequal,[6.1.1,,,6.1.1],[slot(0),equal],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/groonga-13.0.1,run,no,dev-libs,rapidjson,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://app-text/groonga-13.0.1,run,no,dev-libs,xxhash,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
