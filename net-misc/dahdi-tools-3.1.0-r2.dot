digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
rank=same;
label=<<i>ebuild</i>>;
id [label="portage://net-misc/dahdi-tools-3.1.0-r2", color=red, width=4, href="../net-misc/dahdi-tools-3.1.0-r2.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
subgraph cond5599 {
dependency8394 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>ppp</TD></TR></TABLE>>, shape=none, color=red];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# dependency8394 -> package_dependency(portage://net-misc/dahdi-tools-3.1.0-r2,install,no,net-dialup,ppp,none,[,,],any_same_slot,[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
id:e -> dependency8394:w [weight=20,style="solid",arrowhead="vee"];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-misc/dahdi-tools-3.1.0-r2,install,no,dev-libs,newt,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-misc/dahdi-tools-3.1.0-r2,install,no,net-misc,dahdi,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-misc/dahdi-tools-3.1.0-r2,install,no,sys-kernel,linux-headers,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-misc/dahdi-tools-3.1.0-r2,install,no,virtual,libusb,none,[,,],[slot(0)],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
subgraph cond5600 {
dependency8395 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>ppp</TD></TR></TABLE>>, shape=none, color=red];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# dependency8395 -> package_dependency(portage://net-misc/dahdi-tools-3.1.0-r2,run,no,net-dialup,ppp,none,[,,],any_same_slot,[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
id:e -> dependency8395:w [weight=20,style="solid",arrowhead="odot"];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-misc/dahdi-tools-3.1.0-r2,run,no,dev-lang,perl,none,[,,],any_same_slot,[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-misc/dahdi-tools-3.1.0-r2,run,no,dev-libs,newt,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-misc/dahdi-tools-3.1.0-r2,run,no,dev-perl,CGI,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-misc/dahdi-tools-3.1.0-r2,run,no,net-misc,dahdi,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-misc/dahdi-tools-3.1.0-r2,run,no,sys-kernel,linux-headers,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://net-misc/dahdi-tools-3.1.0-r2,run,no,virtual,libusb,none,[,,],[slot(0)],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
