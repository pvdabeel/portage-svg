digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://x11-misc/x11vnc-0.9.16-r8", color=red, width=4, href="../x11-misc/x11vnc-0.9.16-r8.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ssl,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,dev-libs,openssl,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xcomposite,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,x11-libs,libXcomposite,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xdamage,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,x11-libs,libXdamage,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xfixes,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,x11-libs,libXfixes,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xinerama,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,x11-libs,libXinerama,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xrandr,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,x11-libs,libXrandr,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,zeroconf,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,net-dns,avahi,greaterequal,[0.6.4,,,0.6.4],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,net-libs,libvncserver,greaterequal,[0.9.8,,,0.9.8],[],[use(equal(ssl),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,virtual,libcrypt,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,x11-base,xorg-proto,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,x11-libs,libX11,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,x11-libs,libXcursor,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,x11-libs,libXext,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,x11-libs,libXt,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,install,no,x11-libs,libXtst,greaterequal,[1.1.0,,,1.1.0],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ssl,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,dev-libs,openssl,none,[,,],[slot(0),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xcomposite,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,x11-libs,libXcomposite,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xdamage,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,x11-libs,libXdamage,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xfixes,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,x11-libs,libXfixes,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xinerama,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,x11-libs,libXinerama,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,xrandr,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,x11-libs,libXrandr,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,zeroconf,portage://x11-misc/x11vnc-0.9.16-r8,[package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,net-dns,avahi,greaterequal,[0.6.4,,,0.6.4],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,dev-lang,tk,none,[,,],[slot(0)],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,net-libs,libvncserver,greaterequal,[0.9.8,,,0.9.8],[],[use(equal(ssl),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,virtual,libcrypt,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,x11-libs,libX11,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,x11-libs,libXcursor,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,x11-libs,libXext,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://x11-misc/x11vnc-0.9.16-r8,run,no,x11-libs,libXtst,greaterequal,[1.1.0,,,1.1.0],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
