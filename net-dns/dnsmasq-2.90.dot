digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://net-dns/dnsmasq-2.90", color=red, width=4, href="../net-dns/dnsmasq-2.90.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,conntrack,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,install,no,net-libs,libnetfilter_conntrack,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dbus,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,install,no,sys-apps,dbus,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dnssec,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,install,no,dev-libs,nettle,none,[,,],any_same_slot,[use(enable(gmp),none)]),use_conditional_group(positive,static,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,install,no,dev-libs,nettle,greaterequal,[3.4,,,3.4],[],[use(enable(static-libs),positive)])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,idn,portage://net-dns/dnsmasq-2.90,[use_conditional_group(negative,libidn2,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,install,no,net-dns,libidn,none,[,,],[slot(0),equal],[])]),use_conditional_group(positive,libidn2,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,install,no,net-dns,libidn2,greaterequal,[2.0,,,2.0],any_same_slot,[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lua,portage://net-dns/dnsmasq-2.90,[use_conditional_group(positive,lua_single_target_luajit,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,install,no,dev-lang,luajit,none,[,,],any_same_slot,[])]),use_conditional_group(positive,lua_single_target_lua5-1,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,install,no,dev-lang,lua,none,[,,],[slot(5.1)],[])]),use_conditional_group(positive,lua_single_target_lua5-3,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,install,no,dev-lang,lua,none,[,,],[slot(5.3)],[])]),use_conditional_group(positive,lua_single_target_lua5-4,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,install,no,dev-lang,lua,none,[,,],[slot(5.4)],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nettlehash,portage://net-dns/dnsmasq-2.90,[use_conditional_group(positive,static,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,install,no,dev-libs,nettle,greaterequal,[3.4,,,3.4],[],[use(enable(static-libs),positive)])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nls,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,install,no,sys-devel,gettext,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/dnsmasq-2.90,install,no,acct-group,dnsmasq,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/dnsmasq-2.90,install,no,acct-user,dnsmasq,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,conntrack,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,run,no,net-libs,libnetfilter_conntrack,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dbus,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,run,no,sys-apps,dbus,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dnssec,portage://net-dns/dnsmasq-2.90,[use_conditional_group(negative,static,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,run,no,dev-libs,nettle,greaterequal,[3.4,,,3.4],any_same_slot,[use(enable(gmp),none)])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,idn,portage://net-dns/dnsmasq-2.90,[use_conditional_group(negative,libidn2,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,run,no,net-dns,libidn,none,[,,],[slot(0),equal],[])]),use_conditional_group(positive,libidn2,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,run,no,net-dns,libidn2,greaterequal,[2.0,,,2.0],any_same_slot,[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lua,portage://net-dns/dnsmasq-2.90,[use_conditional_group(positive,lua_single_target_luajit,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,run,no,dev-lang,luajit,none,[,,],any_same_slot,[])]),use_conditional_group(positive,lua_single_target_lua5-1,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,run,no,dev-lang,lua,none,[,,],[slot(5.1)],[])]),use_conditional_group(positive,lua_single_target_lua5-3,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,run,no,dev-lang,lua,none,[,,],[slot(5.3)],[])]),use_conditional_group(positive,lua_single_target_lua5-4,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,run,no,dev-lang,lua,none,[,,],[slot(5.4)],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nettlehash,portage://net-dns/dnsmasq-2.90,[use_conditional_group(negative,static,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,run,no,dev-libs,nettle,none,[,,],any_same_slot,[use(enable(gmp),none)])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nls,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,run,no,sys-devel,gettext,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,selinux,portage://net-dns/dnsmasq-2.90,[package_dependency(portage://net-dns/dnsmasq-2.90,run,no,sec-policy,selinux-dnsmasq,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/dnsmasq-2.90,run,no,acct-group,dnsmasq,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/dnsmasq-2.90,run,no,acct-user,dnsmasq,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
