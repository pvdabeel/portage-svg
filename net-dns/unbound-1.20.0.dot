digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://net-dns/unbound-1.20.0", color=red, width=4, href="../net-dns/unbound-1.20.0.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dnscrypt,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,install,no,dev-libs,libsodium,none,[,,],any_same_slot,[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dnstap,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,install,no,dev-libs,fstrm,none,[,,],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)]),package_dependency(portage://net-dns/unbound-1.20.0,install,no,dev-libs,protobuf-c,greaterequal,[1.0.2,,-r1,1.0.2-r1],any_same_slot,[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ecdsa,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,install,no,dev-libs,openssl,none,[,,],[slot(0)],[use(disable(bindist),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,http2,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,install,no,net-libs,nghttp2,none,[,,],any_same_slot,[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python,portage://net-dns/unbound-1.20.0,[use_conditional_group(positive,python_single_target_python3_10,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,install,no,dev-lang,python,none,[,,],[slot(3.10)],[])]),use_conditional_group(positive,python_single_target_python3_11,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,install,no,dev-lang,python,none,[,,],[slot(3.11)],[])]),use_conditional_group(positive,python_single_target_python3_12,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,install,no,dev-lang,python,none,[,,],[slot(3.12)],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,redis,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,install,no,dev-libs,hiredis,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,systemd,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,install,no,sys-apps,systemd,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/unbound-1.20.0,install,no,acct-group,unbound,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/unbound-1.20.0,install,no,acct-user,unbound,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/unbound-1.20.0,install,no,dev-libs,expat,greaterequal,[2.1.0,,-r3,2.1.0-r3],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/unbound-1.20.0,install,no,dev-libs,libevent,greaterequal,[2.0.21,,,2.0.21],[slot(0),equal],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/unbound-1.20.0,install,no,dev-libs,openssl,greaterequal,[1.0.1,h,-r2,1.0.1h-r2],[slot(0),equal],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dnscrypt,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,run,no,dev-libs,libsodium,none,[,,],any_same_slot,[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dnstap,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,run,no,dev-libs,fstrm,none,[,,],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)]),package_dependency(portage://net-dns/unbound-1.20.0,run,no,dev-libs,protobuf-c,greaterequal,[1.0.2,,-r1,1.0.2-r1],any_same_slot,[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ecdsa,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,run,no,dev-libs,openssl,none,[,,],[slot(0)],[use(disable(bindist),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,http2,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,run,no,net-libs,nghttp2,none,[,,],any_same_slot,[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python,portage://net-dns/unbound-1.20.0,[use_conditional_group(positive,python_single_target_python3_10,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,run,no,dev-lang,python,none,[,,],[slot(3.10)],[])]),use_conditional_group(positive,python_single_target_python3_11,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,run,no,dev-lang,python,none,[,,],[slot(3.11)],[])]),use_conditional_group(positive,python_single_target_python3_12,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,run,no,dev-lang,python,none,[,,],[slot(3.12)],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,redis,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,run,no,dev-libs,hiredis,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,selinux,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,run,no,sec-policy,selinux-bind,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,systemd,portage://net-dns/unbound-1.20.0,[package_dependency(portage://net-dns/unbound-1.20.0,run,no,sys-apps,systemd,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/unbound-1.20.0,run,no,acct-group,unbound,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/unbound-1.20.0,run,no,acct-user,unbound,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/unbound-1.20.0,run,no,dev-libs,expat,greaterequal,[2.1.0,,-r3,2.1.0-r3],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/unbound-1.20.0,run,no,dev-libs,libevent,greaterequal,[2.0.21,,,2.0.21],[slot(0),equal],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/unbound-1.20.0,run,no,dev-libs,openssl,greaterequal,[1.0.1,h,-r2,1.0.1h-r2],[slot(0),equal],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/unbound-1.20.0,run,no,net-dns,dnssec-root,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
