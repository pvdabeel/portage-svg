digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://net-dns/knot-resolver-5.7.1", color=red, width=4, href="../net-dns/knot-resolver-5.7.1.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,caps,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,sys-libs,libcap-ng,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dnstap,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,dev-libs,fstrm,none,[,,],[],[]),package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,dev-libs,protobuf-c,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jemalloc,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,dev-libs,jemalloc,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,kresc,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,dev-libs,libedit,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lua_single_target_luajit,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,dev-lang,luajit,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nghttp2,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,net-libs,nghttp2,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,systemd,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,sys-apps,systemd,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,test,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,dev-util,cmocka,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,acct-group,knot-resolver,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,acct-user,knot-resolver,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,dev-db,lmdb,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,dev-libs,libuv,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,net-dns,knot,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,install,no,net-libs,gnutls,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,caps,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,sys-libs,libcap-ng,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,dnstap,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,dev-libs,fstrm,none,[,,],[],[]),package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,dev-libs,protobuf-c,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,jemalloc,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,dev-libs,jemalloc,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,kresc,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,dev-libs,libedit,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lua_single_target_luajit,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,dev-lang,luajit,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,nghttp2,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,net-libs,nghttp2,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,systemd,portage://net-dns/knot-resolver-5.7.1,[package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,sys-apps,systemd,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,acct-group,knot-resolver,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,acct-user,knot-resolver,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,dev-db,lmdb,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,dev-libs,libuv,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,net-dns,knot,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,net-libs,gnutls,none,[,,],any_same_slot,[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://net-dns/knot-resolver-5.7.1,run,no,virtual,tmpfiles,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
