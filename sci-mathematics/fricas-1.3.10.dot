digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://sci-mathematics/fricas-1.3.10", color=red, width=4, href="../sci-mathematics/fricas-1.3.10.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,X,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,install,no,x11-libs,libXpm,none,[,,],[],[]),package_dependency(portage://sci-mathematics/fricas-1.3.10,install,no,x11-libs,libICE,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,clisp,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,install,no,dev-lisp,clisp,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,clozurecl,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,install,no,dev-lisp,clozurecl,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,cmucl,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,install,no,dev-lisp,cmucl,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ecl,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,install,no,dev-lisp,ecl,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,emacs,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,install,no,app-editors,emacs,greaterequal,[23.1,,,23.1],any_different_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gcl,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,install,no,dev-lisp,gcl,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gmp,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,install,no,dev-libs,gmp,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sbcl,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,install,no,dev-lisp,sbcl,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,X,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,run,no,x11-libs,libXpm,none,[,,],[],[]),package_dependency(portage://sci-mathematics/fricas-1.3.10,run,no,x11-libs,libICE,none,[,,],[],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,clisp,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,run,no,dev-lisp,clisp,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,clozurecl,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,run,no,dev-lisp,clozurecl,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,cmucl,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,run,no,dev-lisp,cmucl,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,ecl,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,run,no,dev-lisp,ecl,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,emacs,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,run,no,app-editors,emacs,greaterequal,[23.1,,,23.1],any_different_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gcl,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,run,no,dev-lisp,gcl,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,gmp,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,run,no,dev-libs,gmp,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sbcl,portage://sci-mathematics/fricas-1.3.10,[package_dependency(portage://sci-mathematics/fricas-1.3.10,run,no,dev-lisp,sbcl,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
