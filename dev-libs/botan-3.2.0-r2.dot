digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://dev-libs/botan-3.2.0-r2", color=red, width=4, href="../dev-libs/botan-3.2.0-r2.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,boost,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,install,no,dev-libs,boost,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,bzip2,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,install,no,app-arch,bzip2,greaterequal,[1.0.5,,,1.0.5],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lzma,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,install,no,app-arch,xz-utils,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python,portage://dev-libs/botan-3.2.0-r2,[use_conditional_group(positive,python_targets_python3_10,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,install,no,dev-lang,python,none,[,,],[slot(3.10)],[])]),use_conditional_group(positive,python_targets_python3_11,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,install,no,dev-lang,python,none,[,,],[slot(3.11)],[])]),use_conditional_group(positive,python_targets_python3_12,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,install,no,dev-lang,python,none,[,,],[slot(3.12)],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sqlite,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,install,no,dev-db,sqlite,none,[,,],[slot(3),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,zlib,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,install,no,sys-libs,zlib,greaterequal,[1.2.3,,,1.2.3],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,boost,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,run,no,dev-libs,boost,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,bzip2,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,run,no,app-arch,bzip2,greaterequal,[1.0.5,,,1.0.5],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lzma,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,run,no,app-arch,xz-utils,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python,portage://dev-libs/botan-3.2.0-r2,[use_conditional_group(positive,python_targets_python3_10,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,run,no,dev-lang,python,none,[,,],[slot(3.10)],[])]),use_conditional_group(positive,python_targets_python3_11,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,run,no,dev-lang,python,none,[,,],[slot(3.11)],[])]),use_conditional_group(positive,python_targets_python3_12,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,run,no,dev-lang,python,none,[,,],[slot(3.12)],[])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,sqlite,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,run,no,dev-db,sqlite,none,[,,],[slot(3),equal],[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,zlib,portage://dev-libs/botan-3.2.0-r2,[package_dependency(portage://dev-libs/botan-3.2.0-r2,run,no,sys-libs,zlib,greaterequal,[1.2.3,,,1.2.3],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-libs/botan-3.2.0-r2,run,weak,dev-libs,botan,smaller,[2.19.3,,-r1,2.19.3-r1],[slot(2)],[use(enable(tools),none)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
