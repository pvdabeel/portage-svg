digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
label=<<i>ebuild</i>>;
id [label="portage://dev-libs/libxml2-2.11.8", color=red, width=4, href="../dev-libs/libxml2-2.11.8.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,icu,portage://dev-libs/libxml2-2.11.8,[package_dependency(portage://dev-libs/libxml2-2.11.8,install,no,dev-libs,icu,greaterequal,[51.2,,-r1,51.2-r1],any_same_slot,[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lzma,portage://dev-libs/libxml2-2.11.8,[package_dependency(portage://dev-libs/libxml2-2.11.8,install,no,app-arch,xz-utils,greaterequal,[5.0.5,,-r1,5.0.5-r1],any_same_slot,[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python,portage://dev-libs/libxml2-2.11.8,[use_conditional_group(positive,python_targets_python3_10,portage://dev-libs/libxml2-2.11.8,[package_dependency(portage://dev-libs/libxml2-2.11.8,install,no,dev-lang,python,none,[,,],[slot(3.10)],[use(enable(xml),positive)])]),use_conditional_group(positive,python_targets_python3_11,portage://dev-libs/libxml2-2.11.8,[package_dependency(portage://dev-libs/libxml2-2.11.8,install,no,dev-lang,python,none,[,,],[slot(3.11)],[use(enable(xml),positive)])]),use_conditional_group(positive,python_targets_python3_12,portage://dev-libs/libxml2-2.11.8,[package_dependency(portage://dev-libs/libxml2-2.11.8,install,no,dev-lang,python,none,[,,],[slot(3.12)],[use(enable(xml),positive)])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,readline,portage://dev-libs/libxml2-2.11.8,[package_dependency(portage://dev-libs/libxml2-2.11.8,install,no,sys-libs,readline,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-libs/libxml2-2.11.8,install,no,sys-libs,zlib,greaterequal,[1.2.8,,-r1,1.2.8-r1],any_same_slot,[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-libs/libxml2-2.11.8,install,no,virtual,libiconv,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,icu,portage://dev-libs/libxml2-2.11.8,[package_dependency(portage://dev-libs/libxml2-2.11.8,run,no,dev-libs,icu,greaterequal,[51.2,,-r1,51.2-r1],any_same_slot,[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,lzma,portage://dev-libs/libxml2-2.11.8,[package_dependency(portage://dev-libs/libxml2-2.11.8,run,no,app-arch,xz-utils,greaterequal,[5.0.5,,-r1,5.0.5-r1],any_same_slot,[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,python,portage://dev-libs/libxml2-2.11.8,[use_conditional_group(positive,python_targets_python3_10,portage://dev-libs/libxml2-2.11.8,[package_dependency(portage://dev-libs/libxml2-2.11.8,run,no,dev-lang,python,none,[,,],[slot(3.10)],[use(enable(xml),positive)])]),use_conditional_group(positive,python_targets_python3_11,portage://dev-libs/libxml2-2.11.8,[package_dependency(portage://dev-libs/libxml2-2.11.8,run,no,dev-lang,python,none,[,,],[slot(3.11)],[use(enable(xml),positive)])]),use_conditional_group(positive,python_targets_python3_12,portage://dev-libs/libxml2-2.11.8,[package_dependency(portage://dev-libs/libxml2-2.11.8,run,no,dev-lang,python,none,[,,],[slot(3.12)],[use(enable(xml),positive)])])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(use_conditional_group(positive,readline,portage://dev-libs/libxml2-2.11.8,[package_dependency(portage://dev-libs/libxml2-2.11.8,run,no,sys-libs,readline,none,[,,],any_same_slot,[])]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-libs/libxml2-2.11.8,run,no,sys-libs,zlib,greaterequal,[1.2.8,,-r1,1.2.8-r1],any_same_slot,[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> equal(package_dependency(portage://dev-libs/libxml2-2.11.8,run,no,virtual,libiconv,none,[,,],[],[]))
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

}

}
