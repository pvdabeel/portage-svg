digraph prolog {

# *************
# Graph options
# *************

newrank=true;
concentrate=true;
compound=true;
graph [rankdir=LR,fontname=Helvetica,fontsize=10,ranksep=1.5];#, ranksep=2.5, nodesep=0.2];
edge  [arrowhead=vee];
node  [fontname=Helvetica,fontsize=10];

# **********
# The ebuild
# **********

subgraph cluster_leftcol {
color=gray;
rank=same;
label=<<i>ebuild</i>>;
id [label="portage://x11-apps/mesa-progs-8.5.0", color=red, width=4, href="../x11-apps/mesa-progs-8.5.0.svg"];
}

# ****************
# The dependencies
# ****************

subgraph cluster_midcol {
color=gray;
label=<<i>dependencies</i>>;
subgraph cluster_compile {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile</i>>;
subgraph cond118373 {
dependency227404 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>X</TD></TR></TABLE>>, shape=none, color=red];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# dependency227404 -> package_dependency(portage://x11-apps/mesa-progs-8.5.0,install,no,x11-base,xorg-proto,none,[,,],[],[])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
id:e -> dependency227404:w [weight=20,style="solid",arrowhead="vee"];
subgraph cond118374 {
dependency227405 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>X</TD></TR></TABLE>>, shape=none, color=red];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# dependency227405 -> package_dependency(portage://x11-apps/mesa-progs-8.5.0,install,no,x11-libs,libX11,none,[,,],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# dependency227405 -> package_dependency(portage://x11-apps/mesa-progs-8.5.0,install,no,x11-libs,libXext,none,[,,],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
id:e -> dependency227405:w [weight=20,style="solid",arrowhead="vee"];
subgraph cond118375 {
dependency227406 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>wayland</TD></TR></TABLE>>, shape=none, color=red];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# dependency227406 -> package_dependency(portage://x11-apps/mesa-progs-8.5.0,install,no,dev-libs,wayland,none,[,,],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
id:e -> dependency227406:w [weight=20,style="solid",arrowhead="vee"];
subgraph cond118376 {
dependency227407 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>wayland</TD></TR></TABLE>>, shape=none, color=red];
subgraph pack105734 {
dependency227408 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4" WIDTH="220"><TR><TD ROWSPAN="6" CELLPADDING="30">pack_dep</TD></TR><TR><TD WIDTH="110">no</TD></TR><TR><TD>dev-libs</TD></TR><TR><TD>wayland-protocols</TD></TR><TR><TD>greaterequal</TD></TR><TR><TD>1.12</TD></TR></TABLE>>, shape=none, color=blue];
}
dependency227407:e -> dependency227408:w [weight=20,style="dashed",arrowhead="vee"];
}
id:e -> dependency227407:w [weight=20,style="solid",arrowhead="vee"];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://x11-apps/mesa-progs-8.5.0,install,no,media-libs,mesa,none,[,,],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative),use(enable(egl),positive),use(optenable(gles2),none),use(optenable(wayland),none),use(optenable(X),none)])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
subgraph cluster_compileandrun {
fillcolor="#eeeeee";
style=filled;
label=<<i>compile and run</i>>;
}
subgraph cluster_run {
fillcolor="#eeeeee";
style=filled;
label=<<i>run</i>>;
subgraph cond118377 {
dependency227409 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>X</TD></TR></TABLE>>, shape=none, color=red];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# dependency227409 -> package_dependency(portage://x11-apps/mesa-progs-8.5.0,run,no,x11-libs,libX11,none,[,,],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# dependency227409 -> package_dependency(portage://x11-apps/mesa-progs-8.5.0,run,no,x11-libs,libXext,none,[,,],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
id:e -> dependency227409:w [weight=20,style="solid",arrowhead="odot"];
subgraph cond118378 {
dependency227410 [label=<<TABLE BORDER="0" CELLBORDER="1" CELLSPACING="0" CELLPADDING="4"><TR><TD ROWSPAN="3" CELLPADDING="10">use_conditional</TD></TR><TR><TD>positive</TD></TR><TR><TD>wayland</TD></TR></TABLE>>, shape=none, color=red];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# dependency227410 -> package_dependency(portage://x11-apps/mesa-progs-8.5.0,run,no,dev-libs,wayland,none,[,,],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative)])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
id:e -> dependency227410:w [weight=20,style="solid",arrowhead="odot"];
# *** BEGIN UNKNOWN DEPENDENCY TYPE (TODO) ***
# id -> package_dependency(portage://x11-apps/mesa-progs-8.5.0,run,no,media-libs,mesa,none,[,,],[],[use(optenable(abi_x86_32),negative),use(optenable(abi_x86_64),negative),use(optenable(abi_x86_x32),negative),use(optenable(abi_mips_n32),negative),use(optenable(abi_mips_n64),negative),use(optenable(abi_mips_o32),negative),use(optenable(abi_s390_32),negative),use(optenable(abi_s390_64),negative),use(enable(egl),positive),use(optenable(gles2),none),use(optenable(wayland),none),use(optenable(X),none)])
# *** END UNKNOWN DEPENDENCY TYPE (TODO) ***

}
}

# **************
# The candidates
# **************

subgraph cluster_choices {
rank=same;
color=gray;
label=<<i>candidates</i>>;

subgraph choice105734 {
color=black;
nodesep=1;
choice100101118451081059811547119971211089711010045112114111116111991111081154549465151 [label="portage://dev-libs/wayland-protocols-1.33", color=red, width=4,href="../dev-libs/wayland-protocols-1.33.svg"];
choice100101118451081059811547119971211089711010045112114111116111991111081154549465154 [label="portage://dev-libs/wayland-protocols-1.36", color=red, width=4,href="../dev-libs/wayland-protocols-1.36.svg"];
choice100101118451081059811547119971211089711010045112114111116111991111081154557575757 [label="portage://dev-libs/wayland-protocols-9999", color=red, width=4,href="../dev-libs/wayland-protocols-9999.svg"];
dependency227408:e -> choice100101118451081059811547119971211089711010045112114111116111991111081154549465151:w [style=dotted,weight="100"];
dependency227408:e -> choice100101118451081059811547119971211089711010045112114111116111991111081154549465154:w [style=dotted,weight="100"];
dependency227408:e -> choice100101118451081059811547119971211089711010045112114111116111991111081154557575757:w [style=dotted,weight="100"];
}
}

}
